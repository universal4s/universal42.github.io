<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

	<!-- generator="WordPress/5.1.1" created="2019-04-20 09:23" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>timecraft</title>
	<link>http://www.timecraft.cn</link>
	<description></description>
	<pubDate>Sat, 20 Apr 2019 09:23:59 +0000</pubDate>
	<language>zh-CN</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://www.timecraft.cn</wp:base_site_url>
	<wp:base_blog_url>http://www.timecraft.cn</wp:base_blog_url>

		<wp:author><wp:author_id>1</wp:author_id><wp:author_login><![CDATA[chanhy]]></wp:author_login><wp:author_email><![CDATA[justchanhy@163.com]]></wp:author_email><wp:author_display_name><![CDATA[universal42]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>

		<wp:category>
		<wp:term_id>1</wp:term_id>
		<wp:category_nicename><![CDATA[acm]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[ACM]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>13</wp:term_id>
		<wp:category_nicename><![CDATA[dynamic-programing]]></wp:category_nicename>
		<wp:category_parent><![CDATA[acm]]></wp:category_parent>
		<wp:cat_name><![CDATA[Dynamic Programing]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>43</wp:term_id>
		<wp:category_nicename><![CDATA[graph-algorithms]]></wp:category_nicename>
		<wp:category_parent><![CDATA[acm]]></wp:category_parent>
		<wp:cat_name><![CDATA[Graph Algorithms]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>15</wp:term_id>
		<wp:category_nicename><![CDATA[mathematical-algorithms]]></wp:category_nicename>
		<wp:category_parent><![CDATA[acm]]></wp:category_parent>
		<wp:cat_name><![CDATA[Mathematical Algorithms]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>20</wp:term_id>
		<wp:category_nicename><![CDATA[math-formulas]]></wp:category_nicename>
		<wp:category_parent><![CDATA[mathematical-algorithms]]></wp:category_parent>
		<wp:cat_name><![CDATA[数学公式]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>38</wp:term_id>
		<wp:category_nicename><![CDATA[%e9%a2%98%e7%9b%ae%e5%bd%92%e7%b1%bb]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[题目归类]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>23</wp:term_id>
		<wp:category_nicename><![CDATA[solutions]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[题解]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>33</wp:term_id>
		<wp:category_nicename><![CDATA[codeforces]]></wp:category_nicename>
		<wp:category_parent><![CDATA[solutions]]></wp:category_parent>
		<wp:cat_name><![CDATA[CODEFORCES]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>29</wp:term_id>
		<wp:category_nicename><![CDATA[hdu]]></wp:category_nicename>
		<wp:category_parent><![CDATA[solutions]]></wp:category_parent>
		<wp:cat_name><![CDATA[HDU]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>28</wp:term_id>
		<wp:category_nicename><![CDATA[pku]]></wp:category_nicename>
		<wp:category_parent><![CDATA[solutions]]></wp:category_parent>
		<wp:cat_name><![CDATA[POJ]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>42</wp:term_id>
		<wp:category_nicename><![CDATA[lqb]]></wp:category_nicename>
		<wp:category_parent><![CDATA[solutions]]></wp:category_parent>
		<wp:cat_name><![CDATA[蓝桥杯省赛]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>46</wp:term_id>
		<wp:category_nicename><![CDATA[1130]]></wp:category_nicename>
		<wp:category_parent><![CDATA[codeforces]]></wp:category_parent>
		<wp:cat_name><![CDATA[1130]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>45</wp:term_id>
		<wp:category_nicename><![CDATA[1131]]></wp:category_nicename>
		<wp:category_parent><![CDATA[codeforces]]></wp:category_parent>
		<wp:cat_name><![CDATA[1131]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>44</wp:term_id>
		<wp:category_nicename><![CDATA[1132]]></wp:category_nicename>
		<wp:category_parent><![CDATA[codeforces]]></wp:category_parent>
		<wp:cat_name><![CDATA[1132]]></wp:cat_name>
	</wp:category>
			<wp:tag>
		<wp:term_id>24</wp:term_id>
		<wp:tag_slug><![CDATA[bfs]]></wp:tag_slug>
		<wp:tag_name><![CDATA[bfs]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>30</wp:term_id>
		<wp:tag_slug><![CDATA[bfs-cantor-%e6%95%b0%e5%ad%a6-encode]]></wp:tag_slug>
		<wp:tag_name><![CDATA[bfs cantor 数学 encode]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>39</wp:term_id>
		<wp:tag_slug><![CDATA[bitmasks]]></wp:tag_slug>
		<wp:tag_name><![CDATA[bitmasks]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>27</wp:term_id>
		<wp:tag_slug><![CDATA[brute-force]]></wp:tag_slug>
		<wp:tag_name><![CDATA[brute force]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>26</wp:term_id>
		<wp:tag_slug><![CDATA[brute-form]]></wp:tag_slug>
		<wp:tag_name><![CDATA[brute form]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>36</wp:term_id>
		<wp:tag_slug><![CDATA[combinatorics]]></wp:tag_slug>
		<wp:tag_name><![CDATA[combinatorics]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>47</wp:term_id>
		<wp:tag_slug><![CDATA[dfs]]></wp:tag_slug>
		<wp:tag_name><![CDATA[dfs]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>14</wp:term_id>
		<wp:tag_slug><![CDATA[dp]]></wp:tag_slug>
		<wp:tag_name><![CDATA[DP]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>40</wp:term_id>
		<wp:tag_slug><![CDATA[eratosthenes]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Eratosthenes]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>37</wp:term_id>
		<wp:tag_slug><![CDATA[greedy]]></wp:tag_slug>
		<wp:tag_name><![CDATA[greedy]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>34</wp:term_id>
		<wp:tag_slug><![CDATA[math]]></wp:tag_slug>
		<wp:tag_name><![CDATA[math]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>35</wp:term_id>
		<wp:tag_slug><![CDATA[segment]]></wp:tag_slug>
		<wp:tag_name><![CDATA[segment]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>49</wp:term_id>
		<wp:tag_slug><![CDATA[%e5%91%a8%e8%b5%9b%e9%a2%98%e8%a7%a3]]></wp:tag_slug>
		<wp:tag_name><![CDATA[周赛题解]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>22</wp:term_id>
		<wp:tag_slug><![CDATA[%e5%93%88%e5%b8%8c]]></wp:tag_slug>
		<wp:tag_name><![CDATA[哈希]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>31</wp:term_id>
		<wp:tag_slug><![CDATA[%e5%ba%b7%e6%8b%93%e7%bc%96%e7%a0%81]]></wp:tag_slug>
		<wp:tag_name><![CDATA[康拓编码]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>32</wp:term_id>
		<wp:tag_slug><![CDATA[%e6%89%93%e8%a1%a8]]></wp:tag_slug>
		<wp:tag_name><![CDATA[打表]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>17</wp:term_id>
		<wp:tag_slug><![CDATA[%e6%95%b0%e5%ad%a6]]></wp:tag_slug>
		<wp:tag_name><![CDATA[数学]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>18</wp:term_id>
		<wp:tag_slug><![CDATA[%e6%95%b0%e8%ae%ba]]></wp:tag_slug>
		<wp:tag_name><![CDATA[数论]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>25</wp:term_id>
		<wp:tag_slug><![CDATA[%e6%a8%a1%e6%8b%9f]]></wp:tag_slug>
		<wp:tag_name><![CDATA[模拟]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>21</wp:term_id>
		<wp:tag_slug><![CDATA[%e7%8a%b6%e6%80%81%e5%8e%8b%e7%bc%a9]]></wp:tag_slug>
		<wp:tag_name><![CDATA[状态压缩]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>41</wp:term_id>
		<wp:tag_slug><![CDATA[%e7%ad%9b%e6%b3%95]]></wp:tag_slug>
		<wp:tag_name><![CDATA[筛法]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>48</wp:term_id>
		<wp:tag_slug><![CDATA[%e8%bf%9e%e9%80%9a%e5%9d%97]]></wp:tag_slug>
		<wp:tag_name><![CDATA[连通块]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>19</wp:term_id>
		<wp:tag_slug><![CDATA[%e9%98%b6%e4%b9%98]]></wp:tag_slug>
		<wp:tag_name><![CDATA[阶乘]]></wp:tag_name>
	</wp:tag>
			<wp:term>
		<wp:term_id><![CDATA[1]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[acm]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[ACM]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[24]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[bfs]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[bfs]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[30]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[bfs-cantor-%e6%95%b0%e5%ad%a6-encode]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[bfs cantor 数学 encode]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[39]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[bitmasks]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[bitmasks]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[27]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[brute-force]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[brute force]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[26]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[brute-form]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[brute form]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[36]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[combinatorics]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[combinatorics]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[47]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[dfs]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[dfs]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[14]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[dp]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[DP]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[13]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[dynamic-programing]]></wp:term_slug>
		<wp:term_parent><![CDATA[acm]]></wp:term_parent>
		<wp:term_name><![CDATA[Dynamic Programing]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[40]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[eratosthenes]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Eratosthenes]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[43]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[graph-algorithms]]></wp:term_slug>
		<wp:term_parent><![CDATA[acm]]></wp:term_parent>
		<wp:term_name><![CDATA[Graph Algorithms]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[37]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[greedy]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[greedy]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[34]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[math]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[math]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[15]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[mathematical-algorithms]]></wp:term_slug>
		<wp:term_parent><![CDATA[acm]]></wp:term_parent>
		<wp:term_name><![CDATA[Mathematical Algorithms]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[6]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[nav_menu]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[menu]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[menu]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[35]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[segment]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[segment]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[49]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%91%a8%e8%b5%9b%e9%a2%98%e8%a7%a3]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[周赛题解]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[22]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%93%88%e5%b8%8c]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[哈希]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[31]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%ba%b7%e6%8b%93%e7%bc%96%e7%a0%81]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[康拓编码]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[32]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%89%93%e8%a1%a8]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[打表]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[17]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%95%b0%e5%ad%a6]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[数学]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[20]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[math-formulas]]></wp:term_slug>
		<wp:term_parent><![CDATA[mathematical-algorithms]]></wp:term_parent>
		<wp:term_name><![CDATA[数学公式]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[18]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%95%b0%e8%ae%ba]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[数论]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[25]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%a8%a1%e6%8b%9f]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[模拟]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[21]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e7%8a%b6%e6%80%81%e5%8e%8b%e7%bc%a9]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[状态压缩]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[41]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e7%ad%9b%e6%b3%95]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[筛法]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[48]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e8%bf%9e%e9%80%9a%e5%9d%97]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[连通块]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[19]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e9%98%b6%e4%b9%98]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[阶乘]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[38]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e9%a2%98%e7%9b%ae%e5%bd%92%e7%b1%bb]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[题目归类]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[23]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[solutions]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[题解]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[33]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[codeforces]]></wp:term_slug>
		<wp:term_parent><![CDATA[solutions]]></wp:term_parent>
		<wp:term_name><![CDATA[CODEFORCES]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[29]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[hdu]]></wp:term_slug>
		<wp:term_parent><![CDATA[solutions]]></wp:term_parent>
		<wp:term_name><![CDATA[HDU]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[28]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pku]]></wp:term_slug>
		<wp:term_parent><![CDATA[solutions]]></wp:term_parent>
		<wp:term_name><![CDATA[POJ]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[42]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[lqb]]></wp:term_slug>
		<wp:term_parent><![CDATA[solutions]]></wp:term_parent>
		<wp:term_name><![CDATA[蓝桥杯省赛]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[46]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[1130]]></wp:term_slug>
		<wp:term_parent><![CDATA[codeforces]]></wp:term_parent>
		<wp:term_name><![CDATA[1130]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[45]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[1131]]></wp:term_slug>
		<wp:term_parent><![CDATA[codeforces]]></wp:term_parent>
		<wp:term_name><![CDATA[1131]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[44]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[1132]]></wp:term_slug>
		<wp:term_parent><![CDATA[codeforces]]></wp:term_parent>
		<wp:term_name><![CDATA[1132]]></wp:term_name>
	</wp:term>
			<wp:term><wp:term_id>6</wp:term_id><wp:term_taxonomy>nav_menu</wp:term_taxonomy><wp:term_slug><![CDATA[menu]]></wp:term_slug><wp:term_name><![CDATA[menu]]></wp:term_name>
</wp:term>

	<generator>https://wordpress.org/?v=5.1.1</generator>

<image>
	<url>http://www.timecraft.cn/wp-content/uploads/2018/08/cropped-acm-32x32.png</url>
	<title>timecraft</title>
	<link>http://www.timecraft.cn</link>
	<width>32</width>
	<height>32</height>
</image> 

		<item>
		<title>
				cropped-logon.png		</title>
		<link>http://www.timecraft.cn/cropped-logon-png</link>
		<pubDate>Thu, 02 Aug 2018 03:43:39 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://106.14.199.210/wp-content/uploads/2018/08/cropped-logon.png</guid>
		<description></description>
		<content:encoded>
				<![CDATA[http://106.14.199.210/wp-content/uploads/2018/08/cropped-logon.png]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>7</wp:post_id>
		<wp:post_date><![CDATA[2018-08-02 11:43:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-08-02 03:43:39]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[cropped-logon-png]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[http://www.timecraft.cn/wp-content/uploads/2018/08/cropped-logon.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018/08/cropped-logon.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[site-icon]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:512;s:6:"height";i:512;s:4:"file";s:25:"2018/08/cropped-logon.png";s:5:"sizes";a:8:{s:9:"thumbnail";a:4:{s:4:"file";s:25:"cropped-logon-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:25:"cropped-logon-300x300.png";s:5:"width";i:300;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}s:14:"post-thumbnail";a:4:{s:4:"file";s:25:"cropped-logon-300x300.png";s:5:"width";i:300;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}s:11:"bulk-single";a:4:{s:4:"file";s:25:"cropped-logon-512x460.png";s:5:"width";i:512;s:6:"height";i:460;s:9:"mime-type";s:9:"image/png";}s:13:"site_icon-270";a:4:{s:4:"file";s:25:"cropped-logon-270x270.png";s:5:"width";i:270;s:6:"height";i:270;s:9:"mime-type";s:9:"image/png";}s:13:"site_icon-192";a:4:{s:4:"file";s:25:"cropped-logon-192x192.png";s:5:"width";i:192;s:6:"height";i:192;s:9:"mime-type";s:9:"image/png";}s:13:"site_icon-180";a:4:{s:4:"file";s:25:"cropped-logon-180x180.png";s:5:"width";i:180;s:6:"height";i:180;s:9:"mime-type";s:9:"image/png";}s:12:"site_icon-32";a:4:{s:4:"file";s:23:"cropped-logon-32x32.png";s:5:"width";i:32;s:6:"height";i:32;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>
				acm		</title>
		<link>http://www.timecraft.cn/acm</link>
		<pubDate>Thu, 02 Aug 2018 03:44:38 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://106.14.199.210/wp-content/uploads/2018/08/acm.png</guid>
		<description></description>
		<content:encoded>
				<![CDATA[]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>8</wp:post_id>
		<wp:post_date><![CDATA[2018-08-02 11:44:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-08-02 03:44:38]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[acm]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[http://www.timecraft.cn/wp-content/uploads/2018/08/acm.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018/08/acm.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:414;s:6:"height";i:406;s:4:"file";s:15:"2018/08/acm.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:15:"acm-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:15:"acm-300x294.png";s:5:"width";i:300;s:6:"height";i:294;s:9:"mime-type";s:9:"image/png";}s:14:"post-thumbnail";a:4:{s:4:"file";s:15:"acm-300x300.png";s:5:"width";i:300;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[66]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>
				cropped-acm.png		</title>
		<link>http://www.timecraft.cn/cropped-acm-png</link>
		<pubDate>Thu, 02 Aug 2018 03:44:49 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://106.14.199.210/wp-content/uploads/2018/08/cropped-acm.png</guid>
		<description></description>
		<content:encoded>
				<![CDATA[http://106.14.199.210/wp-content/uploads/2018/08/cropped-acm.png]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>9</wp:post_id>
		<wp:post_date><![CDATA[2018-08-02 11:44:49]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-08-02 03:44:49]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[cropped-acm-png]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[http://www.timecraft.cn/wp-content/uploads/2018/08/cropped-acm.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018/08/cropped-acm.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[site-icon]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:512;s:6:"height";i:512;s:4:"file";s:23:"2018/08/cropped-acm.png";s:5:"sizes";a:8:{s:9:"thumbnail";a:4:{s:4:"file";s:23:"cropped-acm-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:23:"cropped-acm-300x300.png";s:5:"width";i:300;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}s:14:"post-thumbnail";a:4:{s:4:"file";s:23:"cropped-acm-300x300.png";s:5:"width";i:300;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}s:11:"bulk-single";a:4:{s:4:"file";s:23:"cropped-acm-512x460.png";s:5:"width";i:512;s:6:"height";i:460;s:9:"mime-type";s:9:"image/png";}s:13:"site_icon-270";a:4:{s:4:"file";s:23:"cropped-acm-270x270.png";s:5:"width";i:270;s:6:"height";i:270;s:9:"mime-type";s:9:"image/png";}s:13:"site_icon-192";a:4:{s:4:"file";s:23:"cropped-acm-192x192.png";s:5:"width";i:192;s:6:"height";i:192;s:9:"mime-type";s:9:"image/png";}s:13:"site_icon-180";a:4:{s:4:"file";s:23:"cropped-acm-180x180.png";s:5:"width";i:180;s:6:"height";i:180;s:9:"mime-type";s:9:"image/png";}s:12:"site_icon-32";a:4:{s:4:"file";s:21:"cropped-acm-32x32.png";s:5:"width";i:32;s:6:"height";i:32;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>
				社团合照		</title>
		<link>http://www.timecraft.cn/%e7%a4%be%e5%9b%a2%e5%90%88%e7%85%a7</link>
		<pubDate>Thu, 02 Aug 2018 04:17:42 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://106.14.199.210/wp-content/uploads/2018/08/社团合照.jpg</guid>
		<description></description>
		<content:encoded>
				<![CDATA[]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>14</wp:post_id>
		<wp:post_date><![CDATA[2018-08-02 12:17:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-08-02 04:17:42]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e7%a4%be%e5%9b%a2%e5%90%88%e7%85%a7]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[http://www.timecraft.cn/wp-content/uploads/2018/08/社团合照.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018/08/社团合照.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:2827;s:6:"height";i:1590;s:4:"file";s:24:"2018/08/社团合照.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:24:"社团合照-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:24:"社团合照-300x169.jpg";s:5:"width";i:300;s:6:"height";i:169;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:24:"社团合照-768x432.jpg";s:5:"width";i:768;s:6:"height";i:432;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:25:"社团合照-1024x576.jpg";s:5:"width";i:1024;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}s:30:"business-insights-related-post";a:4:{s:4:"file";s:24:"社团合照-700x465.jpg";s:5:"width";i:700;s:6:"height";i:465;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:2:"11";s:6:"credit";s:5:"MAPLE";s:6:"camera";s:11:"PENTAX K-70";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1524303991";s:9:"copyright";s:3:"XYS";s:12:"focal_length";s:2:"18";s:3:"iso";s:3:"800";s:13:"shutter_speed";s:5:"0.004";s:5:"title";s:0:"";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_is_custom_background]]></wp:meta_key>
		<wp:meta_value><![CDATA[wedding-photos]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>
				cropped-.jpg		</title>
		<link>http://www.timecraft.cn/cropped-jpg</link>
		<pubDate>Thu, 02 Aug 2018 04:21:27 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://106.14.199.210/wp-content/uploads/2018/08/社团合照cropped-.jpg</guid>
		<description></description>
		<content:encoded>
				<![CDATA[]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>16</wp:post_id>
		<wp:post_date><![CDATA[2018-08-02 12:21:27]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-08-02 04:21:27]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[cropped-jpg]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[http://www.timecraft.cn/wp-content/uploads/2018/08/cropped-.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018/08/cropped-.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:2000;s:6:"height";i:1200;s:4:"file";s:20:"2018/08/cropped-.jpg";s:5:"sizes";a:6:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"cropped--150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:20:"cropped--300x180.jpg";s:5:"width";i:300;s:6:"height";i:180;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:20:"cropped--768x461.jpg";s:5:"width";i:768;s:6:"height";i:461;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:21:"cropped--1024x614.jpg";s:5:"width";i:1024;s:6:"height";i:614;s:9:"mime-type";s:10:"image/jpeg";}s:14:"post-thumbnail";a:4:{s:4:"file";s:20:"cropped--300x300.jpg";s:5:"width";i:300;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}s:11:"bulk-single";a:4:{s:4:"file";s:21:"cropped--1170x460.jpg";s:5:"width";i:1170;s:6:"height";i:460;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:17:"attachment_parent";i:14;}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_custom_header_last_used_bulk]]></wp:meta_key>
		<wp:meta_value><![CDATA[1533183693]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_is_custom_header]]></wp:meta_key>
		<wp:meta_value><![CDATA[bulk]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>
				cropped-acm-1.png		</title>
		<link>http://www.timecraft.cn/cropped-acm-1-png</link>
		<pubDate>Thu, 02 Aug 2018 04:33:10 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://106.14.199.210/wp-content/uploads/2018/08/cropped-acm-1.png</guid>
		<description></description>
		<content:encoded>
				<![CDATA[http://106.14.199.210/wp-content/uploads/2018/08/cropped-acm-1.png]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>19</wp:post_id>
		<wp:post_date><![CDATA[2018-08-02 12:33:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-08-02 04:33:10]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[cropped-acm-1-png]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[http://www.timecraft.cn/wp-content/uploads/2018/08/cropped-acm-1.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018/08/cropped-acm-1.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom-logo]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:406;s:6:"height";i:406;s:4:"file";s:25:"2018/08/cropped-acm-1.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:25:"cropped-acm-1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:25:"cropped-acm-1-300x300.png";s:5:"width";i:300;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}s:23:"photograph-popular-post";a:4:{s:4:"file";s:23:"cropped-acm-1-75x75.png";s:5:"width";i:75;s:6:"height";i:75;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>
				cropped-1-1.jpg		</title>
		<link>http://www.timecraft.cn/cropped-1-1-jpg</link>
		<pubDate>Thu, 02 Aug 2018 04:33:30 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://106.14.199.210/wp-content/uploads/2018/08/社团合照cropped-1-1.jpg</guid>
		<description></description>
		<content:encoded>
				<![CDATA[]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>20</wp:post_id>
		<wp:post_date><![CDATA[2018-08-02 12:33:30]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-08-02 04:33:30]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[cropped-1-1-jpg]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[http://www.timecraft.cn/wp-content/uploads/2018/08/cropped-1-1.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018/08/cropped-1-1.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:2500;s:6:"height";i:1406;s:4:"file";s:23:"2018/08/cropped-1-1.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:23:"cropped-1-1-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:23:"cropped-1-1-300x169.jpg";s:5:"width";i:300;s:6:"height";i:169;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:23:"cropped-1-1-768x432.jpg";s:5:"width";i:768;s:6:"height";i:432;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:24:"cropped-1-1-1024x576.jpg";s:5:"width";i:1024;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}s:23:"photograph-popular-post";a:4:{s:4:"file";s:21:"cropped-1-1-75x75.jpg";s:5:"width";i:75;s:6:"height";i:75;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:17:"attachment_parent";i:14;}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_custom_header_last_used_wedding-photos]]></wp:meta_key>
		<wp:meta_value><![CDATA[1533184439]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_is_custom_header]]></wp:meta_key>
		<wp:meta_value><![CDATA[wedding-photos]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>
				Avatar		</title>
		<link>http://www.timecraft.cn/img_2138</link>
		<pubDate>Thu, 02 Aug 2018 05:45:11 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://106.14.199.210/wp-content/uploads/2018/08/IMG_2138.jpg</guid>
		<description></description>
		<content:encoded>
				<![CDATA[]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>37</wp:post_id>
		<wp:post_date><![CDATA[2018-08-02 13:45:11]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-08-02 05:45:11]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[img_2138]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[http://www.timecraft.cn/wp-content/uploads/2018/08/IMG_2138.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018/08/IMG_2138.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:720;s:6:"height";i:720;s:4:"file";s:20:"2018/08/IMG_2138.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"IMG_2138-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:20:"IMG_2138-300x300.jpg";s:5:"width";i:300;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}s:23:"photograph-popular-post";a:4:{s:4:"file";s:18:"IMG_2138-75x75.jpg";s:5:"width";i:75;s:6:"height";i:75;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>
				计算机协会		</title>
		<link>http://www.timecraft.cn/%e8%ae%a1%e7%ae%97%e6%9c%ba%e5%8d%8f%e4%bc%9a-2</link>
		<pubDate>Fri, 03 Aug 2018 04:05:45 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://106.14.199.210/wp-content/uploads/2018/08/计算机协会-1.mp4</guid>
		<description></description>
		<content:encoded>
				<![CDATA[]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>62</wp:post_id>
		<wp:post_date><![CDATA[2018-08-03 12:05:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-08-03 04:05:45]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e8%ae%a1%e7%ae%97%e6%9c%ba%e5%8d%8f%e4%bc%9a-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[http://www.timecraft.cn/wp-content/uploads/2018/08/计算机协会-1.mp4]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018/08/计算机协会-1.mp4]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:10:{s:8:"filesize";i:17961379;s:9:"mime_type";s:9:"video/mp4";s:6:"length";i:46;s:16:"length_formatted";s:4:"0:46";s:5:"width";i:1920;s:6:"height";i:1080;s:10:"fileformat";s:3:"mp4";s:10:"dataformat";s:9:"quicktime";s:5:"audio";a:7:{s:10:"dataformat";s:3:"mp4";s:5:"codec";s:19:"ISO/IEC 14496-3 AAC";s:11:"sample_rate";d:44100;s:8:"channels";i:2;s:15:"bits_per_sample";i:16;s:8:"lossless";b:0;s:11:"channelmode";s:6:"stereo";}s:17:"created_timestamp";i:-2082844800;}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>
				ACM/ICPC 数论 素数		</title>
		<link>http://www.timecraft.cn/pages/97</link>
		<pubDate>Fri, 03 Aug 2018 06:51:11 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://106.14.199.210/?p=97</guid>
		<description></description>
		<content:encoded>
				<![CDATA[<div>
<h1></h1>
<h1>基本原理</h1>
<div>          素数，又叫质数，除了1和它本身以外不再有其他的因数。</div>
<h1>代码模板</h1>
<div></div>
<h2>        1） 时间复杂度是O(n)</h2>
<div>
<div><span style="font-family: Consolas;">bool prime(int x){//判断x是不是质数，是返回true，不是返回false</span></div>
<div><span style="font-family: Consolas;">    if(x &lt;= 1) return false;</span></div>
<div><span style="font-family: Consolas;">    for(int i = 2; i &lt; x; i ++){</span></div>
<div><span style="font-family: Consolas;">        if(x % i == 0) return false;</span></div>
<div><span style="font-family: Consolas;">    }</span></div>
<div><span style="font-family: Consolas;">    return true;</span></div>
<div><span style="font-family: Consolas;">}</span></div>
</div>
<h2>         2）时间复杂度O( √n)</h2>
<div>
<div><span style="font-family: Consolas;">bool prime(int x){//判断x是不是质数，是返回true，不是返回false</span></div>
<div><span style="font-family: Consolas;">    if(x &lt;= 1) return false;</span></div>
<div><span style="font-family: Consolas;">    for(int i = 2; i &lt;= sqrt(x + 0.5); i ++){//0.5是防止根号的精度误差</span></div>
<div><span style="font-family: Consolas;">        if(x % i == 0) return false;</span></div>
<div><span style="font-family: Consolas;">    }</span></div>
<div><span style="font-family: Consolas;">    return true;</span></div>
<div><span style="font-family: Consolas;">}</span></div>
</div>
<h2>         3）时间复杂度O( √n)</h2>
<div>
<div><span style="font-family: Consolas;">bool prime(int x){//判断x是不是质数，是返回true，不是返回false</span></div>
<div><span style="font-family: Consolas;">    if(x &lt;= 1) return false;</span></div>
<div><span style="font-family: Consolas;">    for(int i = 2; i * i &lt;= x; i ++){//用乘法避免根号的精度误差</span></div>
<div><span style="font-family: Consolas;">        if(x % i == 0) return false;</span></div>
<div><span style="font-family: Consolas;">    }</span></div>
<div><span style="font-family: Consolas;">    return true;</span></div>
<div><span style="font-family: Consolas;">}</span></div>
<h1>素数筛</h1>
</div>
<div>
<div><span style="font-family: Consolas;">void Eratosthenes(){</span></div>
<div><span style="font-family: Consolas;">    int m=sqrt(maxn+0.5);</span></div>
<div><span style="font-family: Consolas;">    for(int i=2;i&lt;=m;i++){</span></div>
<div><span style="font-family: Consolas;">        if(!vis[i])</span></div>
<div><span style="font-family: Consolas;">            for(int j=i*i;j&lt;=maxn;j+=i)</span></div>
<div><span style="font-family: Consolas;">                vis[j]=1;</span></div>
<div><span style="font-family: Consolas;">    }</span></div>
<div><span style="font-family: Consolas;">}</span></div>
</div>
<h2>   简单应用</h2>
<div></div>
<div>
<h3><strong>预处理每个数的所有质因数</strong></h3>
</div>
<div>
<div><span style="font-family: Consolas;">#include&lt;cstdio&gt;</span></div>
<div><span style="font-family: Consolas;">#include&lt;vector&gt;</span></div>
<div><span style="font-family: Consolas;">using namespace std;</span></div>
<div><span style="font-family: Consolas;">const int N = 100000 + 5;</span></div>
<div><span style="font-family: Consolas;">vector&lt;int &gt; prime_factor[N];</span></div>
<div><span style="font-family: Consolas;">void init(){</span></div>
<div><span style="font-family: Consolas;">    for(int i = 2; i &lt; N; i ++){</span></div>
<div><span style="font-family: Consolas;">        if(prime_factor[i].size() == 0){//如果i是质数</span></div>
<div><span style="font-family: Consolas;">            for(int j = i; j &lt; N; j += i){</span></div>
<div><span style="font-family: Consolas;">                prime_factor[j].push_back(i);</span></div>
<div><span style="font-family: Consolas;">            }</span></div>
<div><span style="font-family: Consolas;">        }</span></div>
<div><span style="font-family: Consolas;">    }</span></div>
<div><span style="font-family: Consolas;">}</span></div>
<div><span style="font-family: Consolas;">int main(){</span></div>
<div><span style="font-family: Consolas;">    init();</span></div>
<div><span style="font-family: Consolas;">}</span></div>
</div>
<div></div>
<div>

<hr />

</div>
<div>
<h3><strong>预处理每个数的所有因数</strong></h3>
</div>
<div>
<div><span style="font-family: Consolas;">#include&lt;cstdio&gt;</span></div>
<div><span style="font-family: Consolas;">#include&lt;vector&gt;</span></div>
<div><span style="font-family: Consolas;">using namespace std;</span></div>
<div><span style="font-family: Consolas;">const int N = 100000 + 5;</span></div>
<div><span style="font-family: Consolas;">vector&lt;int &gt; factor[N];</span></div>
<div><span style="font-family: Consolas;">void init(){</span></div>
<div><span style="font-family: Consolas;">    for(int i = 2; i &lt; N; i ++){</span></div>
<div><span style="font-family: Consolas;">        for(int j = i; j &lt; N; j += i){</span></div>
<div><span style="font-family: Consolas;">            factor[j].push_back(i);</span></div>
<div><span style="font-family: Consolas;">        }</span></div>
<div><span style="font-family: Consolas;">    }</span></div>
<div><span style="font-family: Consolas;">}</span></div>
<div><span style="font-family: Consolas;">int main(){</span></div>
<div><span style="font-family: Consolas;">    init();</span></div>
<div><span style="font-family: Consolas;">}</span></div>
</div>
<div>
<div></div>

<hr />

</div>
<div>
<h3><strong>预处理每个数的质因数分解</strong></h3>
</div>
<div>
<div><span style="font-family: Consolas;">#include&lt;cstdio&gt;</span></div>
<div><span style="font-family: Consolas;">#include&lt;vector&gt;</span></div>
<div><span style="font-family: Consolas;">using namespace std;</span></div>
<div><span style="font-family: Consolas;">const int N = 100000 + 5;</span></div>
<div><span style="font-family: Consolas;">vector&lt;int &gt; prime_factor[N];</span></div>
<div><span style="font-family: Consolas;">void init(){</span></div>
<div><span style="font-family: Consolas;">    int temp;</span></div>
<div><span style="font-family: Consolas;">    for(int i = 2; i &lt; N; i ++){</span></div>
<div><span style="font-family: Consolas;">        if(prime_factor[i].size() == 0){</span></div>
<div><span style="font-family: Consolas;">            for(int j = i; j &lt; N; j += i){</span></div>
<div><span style="font-family: Consolas;">                temp = j;</span></div>
<div><span style="font-family: Consolas;">                while(temp % i == 0){</span></div>
<div><span style="font-family: Consolas;">                    prime_factor[j].push_back(i);</span></div>
<div><span style="font-family: Consolas;">                    temp /= i;</span></div>
<div><span style="font-family: Consolas;">                }  </span></div>
<div><span style="font-family: Consolas;">            }</span></div>
<div><span style="font-family: Consolas;">        }</span></div>
<div><span style="font-family: Consolas;">    }</span></div>
<div><span style="font-family: Consolas;">}</span></div>
<div><span style="font-family: Consolas;">int main(){</span></div>
<div><span style="font-family: Consolas;">    init();</span></div>
<div><span style="font-family: Consolas;">}</span></div>
</div>
</div>]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>97</wp:post_id>
		<wp:post_date><![CDATA[2018-08-03 14:51:11]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-08-03 06:51:11]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[test]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="mathematical-algorithms"><![CDATA[Mathematical Algorithms]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[78]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>
				timecraft		</title>
		<link>http://www.timecraft.cn/pages/122</link>
		<pubDate>Sat, 20 Oct 2018 14:45:59 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://www.timecraft.cn/index.php/chanhy/122/</guid>
		<description></description>
		<content:encoded>
				<![CDATA[]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>122</wp:post_id>
		<wp:post_date><![CDATA[2018-10-20 22:45:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-10-20 14:45:59]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e9%a6%96%e9%a1%b5]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="nav_menu" nicename="menu"><![CDATA[menu]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[122]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[http://www.timecraft.cn]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>
				[DP] LIS		</title>
		<link>http://www.timecraft.cn/pages/125</link>
		<pubDate>Mon, 22 Oct 2018 12:03:40 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://www.timecraft.cn/?p=125</guid>
		<description></description>
		<content:encoded>
				<![CDATA[[infobox title="问题描述"]
在计算机科学中，最长递增子序列(longest increasing subsequence,简称LIS)问题是指在一个给定的数值序列中，找到一个子序列，使得这个子序列元素的数值依次递增，并且这个子序列的长度尽可能大。<span style="color: #ff0000;">注意：最长递增子序列中的元素在原序列中不一定是连续的。</span>
解决最长递增子序列问题的算法最低要求O(nlogn)。
[/infobox]

<hr />

[infobox title="问题举例"]

对于以下的原始序列
<code>0, 8, 4, 12, 2, 10, 6, 14, 1, 9, 5, 13, 3, 11, 7, 15</code>
最长递增子序列为
<code>0, 2, 6, 9, 11, 15.</code>

[success]

值得注意的是原始序列的最长递增子序列并不一定唯一，对于该原始序列，实际上还有以下两个最长递增子序列
<dl>
 	<dd>0, 4, 6, 9, 11, 15 或 0, 4, 6, 9, 13, 15</dd>
</dl>
[/success]

[/infobox]

[infobox title="解决思想"]

令a[0...n-1]为输入数组，lis[i]是索引在i处结束的LIS的长度，使得a[i]是LIS的最后一个元素。

然后，用递归法可以写出L(i)：
<ul>
 	<li>L(i)=1+max(L[j])  (0&lt;j&lt;i and a[j]&lt;a[i])</li>
 	<li>L(1)=1</li>
</ul>
为了找出所给数组的LIS，我们给出max(L(i)) 即可(0&lt;i&lt;n)。

这里，因为可以使用子问题的解来解决主要问题，因此我们可以看到LIS问题具有最优子结构的属性。

[/infobox]

<hr />

[title]下面给出LIS的递归实现[/title]

<a href="https://ideone.com/PzmKUb" target="_blank" rel="noopener">[success]-&gt; 点击链接 查看代码 <span style="color: #ff0000;">LIS recursive  </span>[/success]</a>

<hr />

[danger]递归难免会出现重复子问题，一般，我们会用递推代替递归，事实证明，递推的效率高于递归。[/danger]

[title]下面给出LIS的递推版本[/title]

[success]-&gt; 点击链接查看源码 <span style="color: #ff0000;"><a style="color: #ff0000;" href="https://ideone.com/HygUhu">LIS no recursive</a></span>[/success]

<!--more-->]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>125</wp:post_id>
		<wp:post_date><![CDATA[2018-10-22 20:03:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-10-22 12:03:40]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[dynamic-programing]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="dp"><![CDATA[DP]]></category>
		<category domain="category" nicename="dynamic-programing"><![CDATA[Dynamic Programing]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[120]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>
						</title>
		<link>http://www.timecraft.cn/pages/147</link>
		<pubDate>Mon, 22 Oct 2018 14:41:09 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://www.timecraft.cn/?p=147</guid>
		<description></description>
		<content:encoded>
				<![CDATA[ ]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>147</wp:post_id>
		<wp:post_date><![CDATA[2018-10-22 22:41:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-10-22 14:41:09]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[147]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>2</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="nav_menu" nicename="menu"><![CDATA[menu]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
		<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>
						</title>
		<link>http://www.timecraft.cn/pages/148</link>
		<pubDate>Mon, 22 Oct 2018 14:41:09 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://www.timecraft.cn/?p=148</guid>
		<description></description>
		<content:encoded>
				<![CDATA[ ]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>148</wp:post_id>
		<wp:post_date><![CDATA[2018-10-22 22:41:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-10-22 14:41:09]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[148]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>1</wp:post_parent>
		<wp:menu_order>3</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="nav_menu" nicename="menu"><![CDATA[menu]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
		<wp:meta_value><![CDATA[147]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[13]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
		<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>
						</title>
		<link>http://www.timecraft.cn/pages/149</link>
		<pubDate>Mon, 22 Oct 2018 14:41:09 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://www.timecraft.cn/?p=149</guid>
		<description></description>
		<content:encoded>
				<![CDATA[ ]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>149</wp:post_id>
		<wp:post_date><![CDATA[2018-10-22 22:41:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-10-22 14:41:09]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[149]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>1</wp:post_parent>
		<wp:menu_order>4</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="nav_menu" nicename="menu"><![CDATA[menu]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
		<wp:meta_value><![CDATA[147]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[15]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
		<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>
				v2-00c8323aea372c4219b58c3be0b791c7_hd		</title>
		<link>http://www.timecraft.cn/v2-00c8323aea372c4219b58c3be0b791c7_hd</link>
		<pubDate>Thu, 14 Feb 2019 14:14:40 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://www.timecraft.cn/wp-content/uploads/2019/02/v2-00c8323aea372c4219b58c3be0b791c7_hd.jpg</guid>
		<description></description>
		<content:encoded>
				<![CDATA[]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>159</wp:post_id>
		<wp:post_date><![CDATA[2019-02-14 22:14:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-14 14:14:40]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[v2-00c8323aea372c4219b58c3be0b791c7_hd]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[http://www.timecraft.cn/wp-content/uploads/2019/02/v2-00c8323aea372c4219b58c3be0b791c7_hd.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/02/v2-00c8323aea372c4219b58c3be0b791c7_hd.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:720;s:6:"height";i:688;s:4:"file";s:50:"2019/02/v2-00c8323aea372c4219b58c3be0b791c7_hd.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:50:"v2-00c8323aea372c4219b58c3be0b791c7_hd-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:50:"v2-00c8323aea372c4219b58c3be0b791c7_hd-300x287.jpg";s:5:"width";i:300;s:6:"height";i:287;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_wp_user_avatar]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>
				快速排序总结		</title>
		<link>http://www.timecraft.cn/?p=182</link>
		<pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://www.timecraft.cn/?p=182</guid>
		<description></description>
		<content:encoded>
				<![CDATA[]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>182</wp:post_id>
		<wp:post_date><![CDATA[2019-03-17 12:42:17]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="acm"><![CDATA[ACM]]></category>
						</item>
					<item>
		<title>
				全排列总结		</title>
		<link>http://www.timecraft.cn/?p=183</link>
		<pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://www.timecraft.cn/?p=183</guid>
		<description></description>
		<content:encoded>
				<![CDATA[]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>183</wp:post_id>
		<wp:post_date><![CDATA[2019-03-17 12:42:28]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="acm"><![CDATA[ACM]]></category>
						</item>
					<item>
		<title>
				image		</title>
		<link>http://www.timecraft.cn/pages/237/image</link>
		<pubDate>Fri, 12 Apr 2019 11:52:45 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://www.timecraft.cn/wp-content/uploads/2019/04/image.png</guid>
		<description></description>
		<content:encoded>
				<![CDATA[]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>238</wp:post_id>
		<wp:post_date><![CDATA[2019-04-12 19:52:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-04-12 11:52:45]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>237</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[http://www.timecraft.cn/wp-content/uploads/2019/04/image.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/04/image.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:688;s:6:"height";i:160;s:4:"file";s:17:"2019/04/image.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:17:"image-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:16:"image-300x70.png";s:5:"width";i:300;s:6:"height";i:70;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>
				image-1		</title>
		<link>http://www.timecraft.cn/pages/237/image-1</link>
		<pubDate>Fri, 12 Apr 2019 12:00:11 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://www.timecraft.cn/wp-content/uploads/2019/04/image-1.png</guid>
		<description></description>
		<content:encoded>
				<![CDATA[]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>239</wp:post_id>
		<wp:post_date><![CDATA[2019-04-12 20:00:11]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-04-12 12:00:11]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-1]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>237</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[http://www.timecraft.cn/wp-content/uploads/2019/04/image-1.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/04/image-1.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:125;s:6:"height";i:167;s:4:"file";s:19:"2019/04/image-1.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:4:{s:4:"file";s:19:"image-1-125x150.png";s:5:"width";i:125;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>
				数学公式-斯特灵公式		</title>
		<link>http://www.timecraft.cn/pages/153</link>
		<pubDate>Thu, 14 Feb 2019 05:18:54 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://www.timecraft.cn/?p=153</guid>
		<description></description>
		<content:encoded>
				<![CDATA[<!-- wp:heading {"level":1} -->
<h1>斯特灵 &nbsp; Stirling 公式</h1>
<!-- /wp:heading -->

<!-- wp:heading -->
<h2>公式介绍</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>斯特灵公式是一条用来取n阶乘近似值的数学公式</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>证明：略<br> <br><br></p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>    ln(n!)=ln 1+ln 2+···+ln n

          ≈n ln(n)-n+1</code></pre>
<!-- /wp:code -->

<!-- wp:code -->
<pre class="wp-block-code"><code>len=((0.5*log(2*pi*x)+x*log(x) - x)/log(10))</code></pre>
<!-- /wp:code -->]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>153</wp:post_id>
		<wp:post_date><![CDATA[2019-02-14 13:18:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-14 05:18:54]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e6%95%b0%e5%ad%a6%e5%85%ac%e5%bc%8f-%e6%96%af%e7%89%b9%e7%81%b5%e5%85%ac%e5%bc%8f]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="%e6%95%b0%e5%ad%a6"><![CDATA[数学]]></category>
		<category domain="category" nicename="math-formulas"><![CDATA[数学公式]]></category>
		<category domain="post_tag" nicename="%e6%95%b0%e8%ae%ba"><![CDATA[数论]]></category>
		<category domain="post_tag" nicename="%e9%98%b6%e4%b9%98"><![CDATA[阶乘]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[31]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>
				康拓展开		</title>
		<link>http://www.timecraft.cn/pages/154</link>
		<pubDate>Thu, 14 Feb 2019 05:55:00 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://www.timecraft.cn/?p=154</guid>
		<description></description>
		<content:encoded>
				<![CDATA[<!-- wp:heading {"level":4} -->
<h4>介绍</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>康拓展开是一个全排列到一个自然数的双射，常用于构建哈希表时的空间压缩，康拓展开的实质是计算当前排列在所有由小到大全排列中的顺序，因此是可逆的。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>定义</h4>
<!-- /wp:heading -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">X=a_n(n-1)!+a_{n-1}(n-2)!+a_{n-2}(n-3)!+···+a_2(1)!+a_1(0!)</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>其中 a[i]为整数，并且0&lt;=a[i]&lt;i,代表元素arr[i]在还未出现的数字中排第几，简而言之，就是后面与多少个数小于arr[i]</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>康拓展开是可逆的，若求排列中第x个数的排列，则先将x-1，之后按照公式依次除以(n-i)!</p>
<!-- /wp:paragraph -->]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>154</wp:post_id>
		<wp:post_date><![CDATA[2019-02-14 13:55:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-14 05:55:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%ba%b7%e6%8b%93%e5%b1%95%e5%bc%80]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="%e5%93%88%e5%b8%8c"><![CDATA[哈希]]></category>
		<category domain="post_tag" nicename="%e6%95%b0%e5%ad%a6"><![CDATA[数学]]></category>
		<category domain="category" nicename="math-formulas"><![CDATA[数学公式]]></category>
		<category domain="post_tag" nicename="%e7%8a%b6%e6%80%81%e5%8e%8b%e7%bc%a9"><![CDATA[状态压缩]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[49]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_template_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[post]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_edit_mode]]></wp:meta_key>
		<wp:meta_value><![CDATA[builder]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>
				POJ-3126		</title>
		<link>http://www.timecraft.cn/pages/158</link>
		<pubDate>Thu, 14 Feb 2019 14:08:42 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://www.timecraft.cn/?p=158</guid>
		<description></description>
		<content:encoded>
				<![CDATA[<!-- wp:heading {"level":3} -->
<h3>问题描述：略</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><strong>思路</strong>： 简单的bfs，从初始位置开始，按位暴力从当前状态出发的所有素数状态，注意去重。这里因为数字不大于9999，所以我使用了vis[10000]来判断重复。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>贴出代码</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>
#include&lt;queue>
#include&lt;cmath>
#include&lt;cstdio>
#include&lt;string>
#include&lt;cstring>
#include&lt;iostream>
#include&lt;algorithm>
using namespace std;
#define LOCAL
#define cls ios::sync_with_stdio(false),cin.tie(0),cout.tie(0)
#define Mod 998244353
#define ll long long int
#define mset(a,b) memset(a,b,sizeof(a))
#define INF 1e9
const int maxn=2e3+5;
int n,m;
char err[]="Impossible";
int vis[10005];
struct node{
    int x;
    int step;
};
bool isPrime(int x){
    int len=sqrt(x*1.0);
    for(int i=2;i&lt;=len;i++){
        if(x%i==0) 
            return false;
    }
    return true;
}
int getInt(char *s){
    int x=0;
    for(int i=3;i>=0;i--){
        x=x*10+s[i]-'0';
    }
    return x;
}
int bfs(){
    mset(vis,0);
    queue&lt;node> q;
    node st;
    st.x=n;
    st.step=0;
    q.push(st);
    node f;
    char tmp[10];
    char mp[10];
    vis[n]=1;
    while(!q.empty()){
        f=q.front();
        q.pop();
        if(f.x==m) return f.step;
        int x=f.x;
        for(int i=0;i&lt;4;i++){
            mp[i]=x%10+'0';//取最后一位
            x/=10;
        }
        node ps;
        strcpy(tmp,mp);
        for(int i=0;i&lt;10;i++){//个位变换 0~9
            tmp[0]='0'+i;
            int tp=getInt(tmp);
            if(isPrime(tp)&amp;&amp;!vis[tp]){
                vis[tp]=1;
                ps.x=tp;
                ps.step=f.step+1;
                q.push(ps);
            }
        }
        strcpy(tmp,mp);
        for(int i=0;i&lt;10;i++){//十位变换 0~9
            tmp[1]='0'+i;
            int tp=getInt(tmp);
            if(isPrime(tp)&amp;&amp;!vis[tp]){
                vis[tp]=1;
                ps.x=tp;
                ps.step=f.step+1;
                q.push(ps);
            }
        }
        strcpy(tmp,mp);
        for(int i=0;i&lt;10;i++){//百位变换 0~9
            tmp[2]='0'+i;
            int tp=getInt(tmp);
            if(isPrime(tp)&amp;&amp;!vis[tp]){
                vis[tp]=1;
                ps.x=tp;
                ps.step=f.step+1;
                q.push(ps);
            }
        }
        strcpy(tmp,mp);
        for(int i=1;i&lt;10;i++){//千位变换 1~9
            tmp[3]='0'+i;
            int tp=getInt(tmp);
            if(isPrime(tp)&amp;&amp;!vis[tp]){
                vis[tp]=1;
                ps.x=tp;
                ps.step=f.step+1;
                q.push(ps);
            }
        }
    }
    return -1;
}
int main() {
    cls;
#ifdef LOCAL
    freopen("in.in","r",stdin);
#endif // LOCAL
    int t;
    cin>>t;
    while(t--){
        cin>>n>>m;
        int ans=bfs();
        if(ans==-1) cout&lt;&lt;err&lt;&lt;endl;
        else cout&lt;&lt;ans&lt;&lt;endl;
    }
    return 0;
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>睡前最后一题，可以开心的睡觉去了</p>
<!-- /wp:paragraph -->]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>158</wp:post_id>
		<wp:post_date><![CDATA[2019-02-14 22:08:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-14 14:08:42]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[poj-3126]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="bfs"><![CDATA[bfs]]></category>
		<category domain="category" nicename="pku"><![CDATA[POJ]]></category>
		<category domain="post_tag" nicename="%e6%a8%a1%e6%8b%9f"><![CDATA[模拟]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[40]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>
				POJ-3087		</title>
		<link>http://www.timecraft.cn/pages/164</link>
		<pubDate>Fri, 15 Feb 2019 03:20:12 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://www.timecraft.cn/?p=164</guid>
		<description></description>
		<content:encoded>
				<![CDATA[<!-- wp:heading {"level":4} -->
<h4>题目描述</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>给定两个长为len的字符串s、t和长为2*len的串g，问是否存在按制定规则组合s、t得到g，如果s，t不能组成g，则将g的前后半部分分别赋予s、t，重复以上过程。如果可以得到，这输出变换步长，如果不能，则输出-1.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>思路</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>暴力就完事了，注意判重</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>代码</h4>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include&lt;map>
#include&lt;queue>
#include&lt;cmath>
#include&lt;cstdio>
#include&lt;string>
#include&lt;cstring>
#include&lt;iostream>
#include&lt;algorithm>
using namespace std;
#define LOCAL
#define cls ios::sync_with_stdio(false),cin.tie(0),cout.tie(0)
#define Mod 998244353
#define ll long long int
#define mset(a,b) memset(a,b,sizeof(a))
#define INF 1e9
const int maxn=105;
int len=0;
string s,t,g;

bool check(string &amp;x){//由x y能否组成g


    for(int i=0;i&lt;(len&lt;&lt;1);i++){
        if(x[i]!=g[i]) return false;
    }
    return true;
}
int work(){
    int ans=1;
    string x,y;
    string ss;
    map &lt;string ,int >m;
    cin>>len;
    cin>>s>>t>>g;
    x.resize(len);
    y.resize(len);
    ss.resize(2*len);
    for(int i=0;i&lt;len;i++) x[i]=s[i];
    for(int i=0;i&lt;len;i++) y[i]=t[i];
    for(int i=0;i&lt;len;i++){
        ss[i&lt;&lt;1]=y[i];
        ss[i&lt;&lt;1|1]=x[i];
    }
    m[ss]=1;
    while(!check(ss)){
        ans++;
        for(int i=0;i&lt;len;i++){//各取前后半部分
            x[i]=ss[i];
            y[i]=ss[len+i];
        }
        for(int i=0;i&lt;len;i++){//如果没有出现过，则组成新的串
            ss[i&lt;&lt;1]=y[i];
            ss[i&lt;&lt;1|1]=x[i];
        }
        if(m[ss]) return -1;
        else m[ss]=1;
    }
    return ans;
}
int main() {
    cls;
#ifdef LOCAL
    freopen("in.in","r",stdin);
#endif // LOCAL
    int t;
    cin>>t;
    for(int i=1;i&lt;=t;i++){
        cout&lt;&lt;i&lt;&lt;" "&lt;&lt;work()&lt;&lt;endl;
    }
    return 0;
}</code></pre>
<!-- /wp:code -->]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>164</wp:post_id>
		<wp:post_date><![CDATA[2019-02-15 11:20:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-15 03:20:12]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[poj-3087]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="brute-force"><![CDATA[brute force]]></category>
		<category domain="category" nicename="pku"><![CDATA[POJ]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[32]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>
				HDU-2612		</title>
		<link>http://www.timecraft.cn/pages/166</link>
		<pubDate>Fri, 15 Feb 2019 09:31:07 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://www.timecraft.cn/?p=166</guid>
		<description></description>
		<content:encoded>
				<![CDATA[<!-- wp:heading {"level":4} -->
<h4>尝试思路</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>首先考虑到有很多'@'点，所以很容易想到的是 bfs 每个'@'点，从中取出最小值即可。但是假设图中有很多'@'点，那么必定超时(200^4);</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>正确思路</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>从'Y'、'M'开始 bfs，得到与每个'@'的距离，再遍历每个'@'得出最小值即可.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>给出代码</h4>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>/*
    @description: hdu-2612
    @author: universal42@163.com
    @solution: bfs
*/
#include&lt;queue>
#include&lt;cmath>
#include&lt;cstdio>
#include&lt;string>
#include&lt;cstring>
#include&lt;iostream>
#include&lt;algorithm>
using namespace std;
#define LOCAL
#define cls ios::sync_with_stdio(false),cin.tie(0),cout.tie(0)
#define Mod 998244353
#define ll long long int
#define mset(a,b) memset(a,b,sizeof(a))
#define INF 1e9
const int maxn=2e2+5;
int vis[maxn][maxn];
int n,m;
string mp[maxn];
int mx,my;
int yx,yy;
int dx[]={1,-1,0,0};
int dy[]={0,0,-1,1};
int dis_y[maxn][maxn];
int dis_m[maxn][maxn];
struct node{
    int x,y,step;
};
void bfsM(int x,int y){//从x y开始统计到所有@的距离
    mset(vis,0);
    queue&lt;node> q;
    node st;
    st.x=x;
    st.y=y;
    st.step=0;
    q.push(st);
    vis[x][y]=1;
    node f,tmp;
    while(!q.empty()){
        f=q.front();
        q.pop();
        if(mp[f.x][f.y]=='@'){
            dis_m[f.x][f.y]=f.step;
        }
        for(int i=0;i&lt;4;i++){
            int fx=f.x+dx[i];
            int fy=f.y+dy[i];
            if(fx>=0&amp;&amp;fx&lt;n&amp;&amp;fy>=0&amp;&amp;fy&lt;m&amp;&amp;!vis[fx][fy]&amp;&amp;mp[fx][fy]!='#'){
                vis[fx][fy]=1;
                tmp.x=fx;
                tmp.y=fy;
                tmp.step=f.step+1;
                q.push(tmp);
            }
        }
    }
    
}
void bfsY(int x,int y){//从x y开始统计到所有@的距离
    mset(vis,0);
    queue&lt;node> q;
    node st;
    st.x=x;
    st.y=y;
    st.step=0;
    q.push(st);
    vis[x][y]=1;
    node f,tmp;
    while(!q.empty()){
        f=q.front();
        q.pop();
        if(mp[f.x][f.y]=='@'){
            dis_y[f.x][f.y]=f.step;
        }
        for(int i=0;i&lt;4;i++){
            int fx=f.x+dx[i];
            int fy=f.y+dy[i];
            if(fx>=0&amp;&amp;fx&lt;n&amp;&amp;fy>=0&amp;&amp;fy&lt;m&amp;&amp;!vis[fx][fy]&amp;&amp;mp[fx][fy]!='#'){
                vis[fx][fy]=1;
                tmp.x=fx;
                tmp.y=fy;
                tmp.step=f.step+1;
                q.push(tmp);
            }
        }

    }
    
}
int main() {
    cls;
#ifdef LOCAL
    freopen("in.in","r",stdin);
#endif // LOCAL
    while(cin>>n>>m){
        for(int i=0;i&lt;n;i++){
            cin>>mp[i];
        }
        
        for(int i=0;i&lt;n;i++)
            for(int j=0;j&lt;m;j++){
                if(mp[i][j]=='Y'){
                    yx=i;
                    yy=j;
                }
                else if(mp[i][j]=='M'){
                    mx=i;
                    my=j;
                }
            }
        mset(dis_m,-1);
        mset(dis_y,-1);
        bfsM(mx,my);
        bfsY(yx,yy);
        int ans=INF;
        for(int i=0;i&lt;n;i++){
            for(int j=0;j&lt;m;j++){
                if(mp[i][j]=='@'&amp;&amp;dis_m[i][j]!=-1&amp;&amp;dis_y[i][j]!=-1){
                    ans=min(ans,dis_m[i][j]+dis_y[i][j]);
                }
            }
        }
        cout&lt;&lt;ans*11&lt;&lt;endl;
    }
    return 0;
}</code></pre>
<!-- /wp:code -->]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>166</wp:post_id>
		<wp:post_date><![CDATA[2019-02-15 17:31:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-15 09:31:07]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[hdu-2612]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="bfs"><![CDATA[bfs]]></category>
		<category domain="category" nicename="hdu"><![CDATA[HDU]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[26]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>
				hdu-1043		</title>
		<link>http://www.timecraft.cn/pages/167</link>
		<pubDate>Sat, 16 Feb 2019 05:13:40 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://www.timecraft.cn/?p=167</guid>
		<description></description>
		<content:encoded>
				<![CDATA[<!-- wp:heading {"level":3} -->
<h3>贴出代码，先鸽了，学会了A*再来更</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>/*
    @description: hdu-1043
    @author: universal42@163.com
    @solution: bfs 康拓展开  c++能过
*/
#include&lt;queue>
#include&lt;cmath>
#include&lt;cstdio>
#include&lt;string>
#include&lt;cstring>
#include&lt;iostream>
#include&lt;algorithm>
using namespace std;
#define LOCAL
#define cls ios::sync_with_stdio(false),cin.tie(0),cout.tie(0)
#define Mod 998244353
#define ll long long int
#define mset(a,b) memset(a,b,sizeof(a))
#define INF 1e9
const int maxn=362881;
int fac[]={1,1,2,6,24,120,720,5040,40320};//记录阶乘
bool vis[maxn];
char dir[]={'d','u','r','l'};
const string err="unsolvable";
int dx[]={-1,1,0,0};//上下左右
int dy[]={0,0,-1,1};
char x;
char T_state[9];
int T_cantor;
int T_zero;
char RA[9];
int RA_zero;
string path[maxn];
struct node{
    int zero;//记录0/x的位置
    string path;//记录路径
    int cantor;//康拓编码
    node(){};
    node(int _zero,string _path,int _cantor):zero(_zero),path(_path),cantor(_cantor){};
}st;
queue&lt;node> q;
int Cantor(char *s){//对给定的状态求康拓展开编码
    int ct=0;
    for(int i=0;i&lt;9;i++){
        int cnt=0;
        for(int j=i+1;j&lt;9;j++) if(s[i]>s[j]) cnt++;
        ct+=(cnt*fac[9-i-1]);
    }
    return ct;
}
void CantorReverse(int x,char *s){//给定康拓编码，返回状态数组
    int vst[20]={0};
    for(int i=0;i&lt;9;i++){
        int t=x/fac[9-i-1];
        int j;
        for(j=0;j&lt;9;j++){
            if(!vst[j]){
                if(t==0) break;
                t--;
            }
        }
        s[i]='0'+j;
        vst[j]=1;
        x%=fac[9-i-1];
    }
}
void init(){
    for(int i=0;i&lt;8;i++) T_state[i]=i+1+'0';
    T_state[8]='0';
    T_zero=8;//记录初始状态0的位置
    T_cantor=Cantor(T_state);
}
void Swap(char &amp;a,char &amp;b){
    char t=a;
    a=b;
    b=t;
}
void bfs(){
    mset(vis,false);
    st.cantor=T_cantor,st.zero=T_zero,st.zero=T_zero,vis[st.cantor]=1;
    q.push(st);
    node f;
    char tmp[9];
    char na[9];//获取当前Cantor值的对应数组
    while(!q.empty()){
        f=q.front();
        q.pop();
        CantorReverse(f.cantor,na);//获取当前结点对应的状态数组
        int fx=f.zero/3,fy=f.zero%3;
        if(fx>=1){//0可以上移
            Swap(na[fx*3+fy],na[(fx-1)*3+fy]);
            int val=Cantor(na);
            if(!vis[val]){
                vis[val]=1;
                q.push(node((fx-1)*3+fy,f.path+'d',val));
                path[val]=f.path+'d';
            }
            Swap(na[fx*3+fy],na[(fx-1)*3+fy]);
        }
        if(fx&lt;=1){//可以下移
            Swap(na[fx*3+fy],na[(fx+1)*3+fy]);
            int val=Cantor(na);
            if(!vis[val]){
                vis[val]=1;
                q.push(node((fx+1)*3+fy,f.path+'u',val));//下面的数上移
                path[val]=f.path+'u';
            }
            Swap(na[fx*3+fy],na[(fx+1)*3+fy]);
        }
        if(fy>=1){//可以左移
            Swap(na[fx*3+fy],na[fx*3+fy-1]);
            int val=Cantor(na);
            if(!vis[val]){
                vis[val]=1;
                q.push(node(fx*3+fy-1,f.path+'r',val));//左边的数右移
                path[val]=f.path+'r';
            }
            Swap(na[fx*3+fy],na[fx*3+fy-1]);
        }
        if(fy&lt;=1){//可以左移
            Swap(na[fx*3+fy],na[fx*3+fy+1]);
            int val=Cantor(na);
            if(!vis[val]){
                vis[val]=1;
                q.push(node(fx*3+fy+1,f.path+'l',val));//右边的数左移
                path[val]=f.path+'l';
            }
            Swap(na[fx*3+fy],na[fx*3+fy+1]);
        }
    }
}
int main() {
    //cls;
#ifdef LOCAL
    freopen("in.in","r",stdin);
#endif // LOCAL
    init();
    bfs();
    while(cin>>x){
        if(x=='x'){
            RA[0]='0';
            RA_zero=0;
        }
        else RA[0]=x;
        for(int i=1;i&lt;=8;i++){
            cin>>x;
            if(x=='x'){
                RA[i]='0';
                RA_zero=i;
            }
            else RA[i]=x;
        }
        int val=Cantor(RA);
        if(vis[val]){
            for(int i=path[val].length()-1;i>=0;i--) cout&lt;&lt;path[val][i];
            cout&lt;&lt;endl;
        }
        else cout&lt;&lt;err&lt;&lt;endl;
    }
    return 0;
}</code></pre>
<!-- /wp:code -->]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>167</wp:post_id>
		<wp:post_date><![CDATA[2019-02-16 13:13:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-16 05:13:40]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[hdu-1043]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="bfs"><![CDATA[bfs]]></category>
		<category domain="category" nicename="hdu"><![CDATA[HDU]]></category>
		<category domain="post_tag" nicename="%e5%ba%b7%e6%8b%93%e7%bc%96%e7%a0%81"><![CDATA[康拓编码]]></category>
		<category domain="post_tag" nicename="%e6%89%93%e8%a1%a8"><![CDATA[打表]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[36]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[love]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>
				CF-1107-D		</title>
		<link>http://www.timecraft.cn/pages/168</link>
		<pubDate>Sun, 17 Feb 2019 06:11:44 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://www.timecraft.cn/?p=168</guid>
		<description></description>
		<content:encoded>
				<![CDATA[<!-- wp:paragraph -->
<p>先贴代码，后面证明</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>/*
    @description: cf-1107-D
    @author: universal42@163.com
    @solution: 暴力
*/
#include&lt;queue>
#include&lt;cmath>
#include&lt;cstdio>
#include&lt;string>
#include&lt;cstring>
#include&lt;iostream>
#include&lt;algorithm>
using namespace std;
#define LOCAL
#define cls ios::sync_with_stdio(false),cin.tie(0),cout.tie(0)
#define Mod 998244353
#define ll long long int
#define mset(a,b) memset(a,b,sizeof(a))
#define INF 1e9
const int maxn=5200+5;
int a[maxn][maxn];
int n;
void debug(){
    for(int i=1;i&lt;=n;i++){
        for(int j=1;j&lt;=n;j++) cout&lt;&lt;a[i][j]&lt;&lt;" ";
        cout&lt;&lt;endl;
    }
}
bool check(int x){//判断x*x的子矩阵内所有元素是否相等,x是子矩阵长
    for(int i=1;i&lt;=n;i+=x){
        for(int j=1;j&lt;=n;j+=x){
            int t=a[i][j];
            for(int k=0;k&lt;x;k++){
                for(int l=0;l&lt;x;l++) if(a[i+k][j+l]!=t) return 0;
            }
        }
    }
    return 1;
}
int main() {
    cls;
#ifdef LOCAL
    freopen("in.in","r",stdin);
#endif // LOCAL
    cin>>n;
    string s;
    for(int i=1;i&lt;=n;i++){
        //16进制转换为二进制
        cin>>s;
        int t;
        for(int j=n;j>=1;j-=4){
            t=(isdigit(s[(j-1)/4])?s[(j-1)/4]-'0':s[(j-1)/4]-'A'+10);
            for(int l=0;l&lt;4;l++){
                a[i][j-l]=(t>>l)&1;
            }
        }
    }
    //debug();
    //暴力解法
    for(int i=n;i>1;i--){
        if(n%i==0){//是其因子
            if(check(i)){//x==i
                cout&lt;&lt;i&lt;&lt;endl;
                return 0;
            }
        }
    }
    cout&lt;&lt;1&lt;&lt;endl;
    return 0;
}</code></pre>
<!-- /wp:code -->]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>168</wp:post_id>
		<wp:post_date><![CDATA[2019-02-17 14:11:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-17 06:11:44]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cf-1107-d]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="brute-force"><![CDATA[brute force]]></category>
		<category domain="category" nicename="codeforces"><![CDATA[CODEFORCES]]></category>
		<category domain="post_tag" nicename="math"><![CDATA[math]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[35]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>
				CF-1102-B		</title>
		<link>http://www.timecraft.cn/pages/170</link>
		<pubDate>Sun, 17 Feb 2019 10:31:02 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://www.timecraft.cn/?p=170</guid>
		<description></description>
		<content:encoded>
				<![CDATA[<!-- wp:heading {"level":4} -->
<h4>思路</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>从1开始对元素染色，如果某个元素当前颜色已经染过了，那么寻找一个没有染过的颜色即可。</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>/*
    @description: cf-1102-B
    @author: universal42@163.com
    @solution: greedy
*/
#include&lt;queue>
#include&lt;cmath>
#include&lt;cstdio>
#include&lt;string>
#include&lt;cstring>
#include&lt;iostream>
#include&lt;algorithm>
using namespace std;
#define LOCAL
#define cls ios::sync_with_stdio(false),cin.tie(0),cout.tie(0)
#define Mod 998244353
#define ll long long int
#define mset(a,b) memset(a,b,sizeof(a))
#define INF 1e9
const int maxn=5000+5;
string yes="YES\n";
string no="NO\n";
int a[maxn];
bool v[maxn][maxn];//元素a[i],颜色j是否出现过
int num[maxn];
int ans[maxn];
int main() {
    cls;
#ifdef LOCAL
    freopen("in.in","r",stdin);
#endif // LOCAL
    int n,k;
    cin>>n>>k;
    bool flag=0;
    for(int i=0;i&lt;n;i++) {
        cin>>a[i];
        num[a[i]]++;
        if(num[a[i]]]]><![CDATA[>k) flag=true;
    }
    if(flag){
        cout&lt;&lt;no;
        return 0;
    }
    int color=1;
    for(int i=0;i&lt;n;i++){
        int j=0;
        while(v[a[i]][color]&amp;&amp;j&lt;k) {
            color=color%k+1;
            j++;
        }
        v[a[i]][color]=true;
        ans[i]=color;
        color=color%k+1;
        j=0;
    }
    cout&lt;&lt;yes;
    for(int i=0;i&lt;n;i++){
        if(i) cout&lt;&lt;" ";
        cout&lt;&lt;ans[i];
    }
    cout&lt;&lt;endl;
    return 0;
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>170</wp:post_id>
		<wp:post_date><![CDATA[2019-02-17 18:31:02]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-17 10:31:02]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cf-1102-b]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="codeforces"><![CDATA[CODEFORCES]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[18]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>
				CF-1102-E		</title>
		<link>http://www.timecraft.cn/pages/172</link>
		<pubDate>Mon, 18 Feb 2019 04:24:19 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://www.timecraft.cn/?p=172</guid>
		<description></description>
		<content:encoded>
				<![CDATA[<!-- wp:heading {"level":4} -->
<h4>思路</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>如果 ai=aj,且bi=bj时，可知b[i]=b[i+1]=…=b[j]，对b来说 [i,j] 这个区间的值是一致的<br>
        用l[x],r[x]分别代表，x这个值的边界位置（也就是最左和最右位置） 则[l[x],r[x]]这个区间是一致的<br>
        如果两个线段相交，那么相交的两个线段必然都一致<br>
        设y是不相交线段的个数，ans是解<br>
        那么 ans=2^y%mod</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>解决方案</h4>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>/*
    @description: 
    @author: universal42@163.com
    @solution: 
        后一项等于当前项，或者比当前项大于1
        b序列使一个单调递增的序列
*/
#include&lt;map>
#include&lt;queue>
#include&lt;cmath>
#include&lt;cstdio>
#include&lt;string>
#include&lt;cstring>
#include&lt;iostream>
#include&lt;algorithm>
using namespace std;
#define LOCAL
#define cls ios::sync_with_stdio(false),cin.tie(0),cout.tie(0)
#define Mod 998244353
#define ll long long int
#define mset(a,b) memset(a,b,sizeof(a))
#define INF 1e9
const int maxn=2e5+5;
int a[maxn];
int n;
map&lt;int,int> r;//记录数字x最右边位置
ll pow_mod(ll a,ll b){//a^b%mod
    ll res=1;
    while(b){
        if(b&amp;1) res=(res*a)%Mod;
        b>>=1;
        a=a*a%Mod;
    }
    return res;
}
ll getSegNum(){//获取不相交线段个数
    /*
        初始化线段个数为n，如果两个线段相交，那么用n减去  相交线段的最右边的线段的右端点减去第一个线段的左端点再加一 ，就是不相交线段的个数 
    */
    int ans=n;
    int last=-1;
    int start=0;
    for(int i=0;i&lt;n;i++){
        if(r[a[i]]!=i){//右边端点不是自身，也就是说这个值不是单点
            last=r[a[i]];
            start=i;
            for(int j=start+1;j&lt;=last;j++){
                if(r[a[j]]]]><![CDATA[>r[a[start]]){//该区间相交
                    start=j;
                    last=r[a[j]];
                }
            }
            ans=ans-last+i;
            i=last;
        }
    }
    return ans;
}
int main() {
    //cls;
#ifdef LOCAL
    freopen("in.in","r",stdin);
#endif // LOCAL
    scanf("%d",&amp;n);
    for(int i=0;i&lt;n;i++){
        scanf("%d",&amp;a[i]);
        r[a[i]]=i;
    }
    ll cnt=getSegNum();
    ll ans=pow_mod(2,cnt-1);
    printf("%lld\n",ans);
    return 0;
}</code></pre>
<!-- /wp:code -->]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>172</wp:post_id>
		<wp:post_date><![CDATA[2019-02-18 12:24:19]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-18 04:24:19]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cf-1102-e]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="codeforces"><![CDATA[CODEFORCES]]></category>
		<category domain="post_tag" nicename="combinatorics"><![CDATA[combinatorics]]></category>
		<category domain="post_tag" nicename="segment"><![CDATA[segment]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[25]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>
				CF-1102-D		</title>
		<link>http://www.timecraft.cn/pages/173</link>
		<pubDate>Mon, 18 Feb 2019 04:27:10 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://www.timecraft.cn/?p=173</guid>
		<description></description>
		<content:encoded>
				<![CDATA[<!-- wp:heading {"level":4} -->
<h4>思路</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>不外乎八种情况，0，1，2都大于/小于平均值这两种情况不存在，所以只有六种情况，根据字典序贪心修改一下即可</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>解决方案</h4>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>/*
    @description: 
    @author: universal42@163.com
    @solution: 
    @chinese problem:
        给定一个只包含0,1,2的字符串，这样的串称为三元串
        改动最少次数，使0,1,2的数量相等
        输出字典序最小的目标字符串
*/
#include&lt;queue>
#include&lt;cmath>
#include&lt;cstdio>
#include&lt;string>
#include&lt;cstring>
#include&lt;iostream>
#include&lt;algorithm>
using namespace std;
#define LOCAL
#define cls ios::sync_with_stdio(false),cin.tie(0),cout.tie(0)
#define Mod 998244353
#define ll long long int
#define mset(a,b) memset(a,b,sizeof(a))
#define INF 1e9
const int maxn=2e3+5;
int main() {
    cls;
#ifdef LOCAL
    freopen("in.in","r",stdin);
#endif // LOCAL
    int n;
    string s;
    cin>>n>>s;
    int cnt[3]={0};
    int average=n/3;
    for(int i=0;i&lt;n;i++){
        cnt[s[i]-'0']++;
    }

    if(cnt[0]>=average&amp;&amp;cnt[1]>=average&amp;&amp;cnt[2]&lt;=average){
        int a=cnt[0]-average;
        int b=cnt[1]-average;
        for(int i=n-1;i>=0&amp;&amp;(a||b);i--){
            if(s[i]=='0'&amp;&amp;a){
                s[i]='2';
                a--;
            }
            else if(s[i]=='1'&amp;&amp;b){
                s[i]='2';
                b--;
            }
        }
    }
    else if(cnt[0]>=average&amp;&amp;cnt[1]&lt;=average&amp;&amp;cnt[2]&lt;=average){
        int a=cnt[0]-average;
        int c=average-cnt[2];
        int b=average-cnt[1];
        for(int i=n-1;i>=0&amp;&c;i--){
            if(s[i]=='0'){
                s[i]='2';
                c--;
            }
        }
        for(int i=n-1;i>=0&amp;&b;i--){
            if(s[i]=='0'){
                s[i]='1';
                b--;
            }
        }
    }
    else if(cnt[0]&lt;=average&amp;&amp;cnt[1]>=average&amp;&amp;cnt[2]&lt;=average){
        int a=average-cnt[0];
        int c=average-cnt[2];
        for(int i=0;i&lt;n&amp;&a;i++){
            if(s[i]=='1'){
                s[i]='0';
                a--;
            }
        }
        for(int i=n-1;i>=0&amp;&c;i--){
            if(s[i]=='1'){
                s[i]='2';
                c--;
            }
        }
    }
    else if(cnt[0]&lt;=average&amp;&amp;cnt[1]>=average&amp;&amp;cnt[2]>=average){
        int b=cnt[1]-average;
        int c=cnt[2]-average;
        for(int i=0;i&lt;n&amp;&amp;(b||c);i++){
            if(s[i]=='1'&amp;&amp;b){
                s[i]='0';
                b--;
            }
            else if(s[i]=='2'&amp;&amp;c){
                s[i]='0';
                c--;
            }
        }
    }
    else if(cnt[0]&lt;=average&amp;&amp;cnt[1]&lt;=average&amp;&amp;cnt[2]>=average){
        int a=average-cnt[0];
        int b=average-cnt[1];
        for(int i=0;i&lt;n&amp;&a;i++){
            if(s[i]=='2'){
                s[i]='0';
                a--;
            }
        }
        for(int i=0;i&lt;n&amp;&b;i++){
            if(s[i]=='2'){
                s[i]='1';
                b--;
            }
        }
    }
    else if(cnt[0]>=average&amp;&amp;cnt[1]&lt;=average&amp;&amp;cnt[2]>=average){
        int a=cnt[0]-average;
        int c=cnt[2]-average;
        for(int i=n-1;i>=0&amp;&a;i--){
            if(s[i]=='0'){
                s[i]='1';
                a--;
            }
        }
        for(int i=0;i&lt;n&amp;&c;i++){
            if(s[i]=='2'){
                s[i]='1';
                c--;
            }
        }
    }
    cout&lt;&lt;s&lt;&lt;endl;
    return 0;
}</code></pre>
<!-- /wp:code -->]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>173</wp:post_id>
		<wp:post_date><![CDATA[2019-02-18 12:27:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-18 04:27:10]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cf-1102-d]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="codeforces"><![CDATA[CODEFORCES]]></category>
		<category domain="post_tag" nicename="greedy"><![CDATA[greedy]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[18]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>
				关灯问题总结		</title>
		<link>http://www.timecraft.cn/pages/174</link>
		<pubDate>Tue, 19 Feb 2019 03:48:54 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://www.timecraft.cn/?p=174</guid>
		<description></description>
		<content:encoded>
				<![CDATA[<!-- wp:heading {"level":4} -->
<h4>题目描述</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>给定一个5*5只有0/1的矩阵，1表示灯开着，0表示灯关着，每个灯有唯一的一个开关，按动一个灯的开关时，他的相邻灯盏状态也会改变（上下左右）。问是否存在一个一种方案，使其在n步之内关掉或者打开所有的灯。</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>例如：
10111
01101
10111
10000
11011</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":4} -->
<h4>分析一</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>

首先考虑暴力解法，肯定有一个dfs，递归枚举每个位置是否翻转，到达底界时应用当前方案并更新最值。复杂度O(2^25)(不用计算了， <br>33554432 )，这个复杂度是必定超时的。

</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>分析二</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>        依据题目给定的条件，一个开关按动时，他的周围灯的状态也会随之改变。观察第一行，能够改变第一行状态的只有第一行自身改变和第二行改变时的被动改变。假设当前我们要把所有灯打开（全为1），那么对于第一行的一个灯light[0][j]=='0'，想要改变他的状态只有改变他自身和改变light[1][j]这两个位置。假设当前通过改变第一行和第二行的某些位置，使得第一行全为1，那么第一行就可以不用放在考虑范围之内了。接下来我们考虑第二行，能够改变第二行的操作只有改变第二行和第三行，因为第一行已经全是1，所以改变第二行会影响第一行，因此我们只能改变第三行来使第二行全为1。以此类推 。。。<br>        假设按照上面的操作我们已经将前4行的状态全部改变为1，对于最后一行，能够改变其状态的只有它的下一行，但是遗憾的是，它本身已经使最后一行了，所以它的0状态是没法被改变的。那么如何检查当前按照这种方案是否已经得到了全是1的状态呢。因为前4行已经全是1，因此只要检查最后一行是否全是1就可以知道按照这种方案得到的状态是否符合题意。<br>        到这里，我们可以发现，对于第i行，我们总是改变第i+1行（不包括最后一行）使其全为1。也就是说，第二行改变依赖于第一行的状态，第三行的改变依赖于第二行的状态，···，第i+1行的改变依赖于第i行的状态，可以发现只要第一行的状态确定了，那么其他行如何改变也就确定了。所以，我们只要枚举第一行的灯如何按动，就唯一确定了其他行的按动方案。<br>        因此，问题就转换成了枚举第一行的翻转方案，并且应用当前枚举到的方案，向下应用，对于最后一行检查其是否全为1即可。<br>         总复杂度O(2^5*(5*5+20*5+5))。<br>        这里我使用状态来进行枚举（状态压缩）。因为对于一个位置，要么按要么不按，（类似于背包问题的放不放），因此枚举数就是2^5（2*2*2*2*2），对应2进制就是00000-11111。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>需要注意的是，对于一个灯的位置，只有奇数次操作才是有效的，偶数次等于没有操作，这一点也是分析二的前提 。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>相似问题还有POJ的3279.题目类似，可以使用相同解法</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>解决方案</h4>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include&lt;bits/stdc++.h>
using namespace std;
//#define LOCAL
#define Mod 998244353
#define ll long long int
#define mset(a,b) memset(a,b,sizeof(a))
#define INF 0x3f3f3f3f
const int maxn=2e3+5;
char mp[10][10];
int dx[5]={0,1,-1,0,0};
int dy[5]={0,0,0,-1,1};
void turn(int x,int y){
    for(int i=0;i&lt;5;i++){
        int a=x+dx[i],b=y+dy[i];
        if(a>=0&amp;&amp;a&lt;5&amp;&amp;b>=0&amp;&amp;b&lt;5){
            mp[a][b]^=1;
        }
    }
}
int dowork(){
    int ans=INF;
    for(int i=0;i&lt;1&lt;&lt;5;i++){
        int res=0;
        char backup[10][10];
        memcpy(backup,mp,sizeof(backup));
        for(int j=0;j&lt;5;j++){
            if(i>>j&amp;1){
                res++;
                turn(0,j);
            }
        }
        for(int i=0;i&lt;4;i++){
            for(int j=0;j&lt;5;j++){
                if(mp[i][j]=='0'){
                    res++;
                    turn(i+1,j);
                }
            }
        }
        bool suc=true;
        for(int j=0;j&lt;5;j++){
            if(mp[4][j]=='0'){
                suc=!suc;
                break;
            }
        }
        ans=suc?min(ans,res):ans;
        memcpy(mp,backup,sizeof(mp));
    }
    if(ans>6) return -1;
    else return ans;

}
int main() {
#ifdef LOCAL
    freopen("in.in","r",stdin);
#endif // LOCAL
    int t;
    scanf("%d",&amp;t);
    while(t--){
        for(int i=0;i&lt;5;i++){
            scanf("%s",mp+i);
        }
        printf("%d\n",dowork());
    }
    return 0;
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>个人小结：之前对这个问题没有理解透彻，就下决心总结一番。</p>
<!-- /wp:paragraph -->]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>174</wp:post_id>
		<wp:post_date><![CDATA[2019-02-19 11:48:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-19 03:48:54]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%85%b3%e7%81%af%e9%97%ae%e9%a2%98%e6%80%bb%e7%bb%93]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="bitmasks"><![CDATA[bitmasks]]></category>
		<category domain="post_tag" nicename="%e7%8a%b6%e6%80%81%e5%8e%8b%e7%bc%a9"><![CDATA[状态压缩]]></category>
		<category domain="category" nicename="%e9%a2%98%e7%9b%ae%e5%bd%92%e7%b1%bb"><![CDATA[题目归类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[67]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[love]]></wp:meta_key>
		<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>
				埃拉托斯特尼筛法 埃氏晒		</title>
		<link>http://www.timecraft.cn/pages/176</link>
		<pubDate>Tue, 19 Feb 2019 04:08:03 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://www.timecraft.cn/?p=176</guid>
		<description></description>
		<content:encoded>
				<![CDATA[<!-- wp:heading {"level":4} -->
<h4>算法描述</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>要得到自然数n以内的全部素数，必须把不大于<br> √n的所有素数的倍数剔除，剩下的就是素数。<br>给出要晒数值的范围n，找出以内的素数。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>先用2去筛，把2标记为素数，并把2的倍数剔除；<br>用3去筛，把3标记为素数，并把3的倍数剔除；<br>考虑一下，此时遍历到4，并且4已经被用2筛的时候给筛掉了，所以就跳过。<br>用5去筛，把5标记为素数，并把5的倍数剔除；<br>···<br>不断重复下去<br>对于可以枚举到的最小数（因为是从2开始向后枚举）<br>因此不用担心枚举到i时，它不是素数。<br>vis[i]表示i是否是素数<br></p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include&lt;bits/stdc++.h>
using namespace std;
const int maxn=100000;
int vis[maxn];
void Eratosthenes(int n){//给定n的范围
	int len=sqrt(n+0.5);//避免误差
	for(int i=2;i&lt;=len;i++){
		if(!vis[i]){//当前用来筛的数是素数
			for(int j=i+i;j&lt;=n;j+=i){
				vis[j]=1;
			}
		}
	}
}</code></pre>
<!-- /wp:code -->]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>176</wp:post_id>
		<wp:post_date><![CDATA[2019-02-19 12:08:03]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-19 04:08:03]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%9f%83%e6%8b%89%e6%89%98%e6%96%af%e7%89%b9%e5%b0%bc%e7%ad%9b%e6%b3%95-%e5%9f%83%e6%b0%8f%e6%99%92]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="acm"><![CDATA[ACM]]></category>
		<category domain="post_tag" nicename="eratosthenes"><![CDATA[Eratosthenes]]></category>
		<category domain="post_tag" nicename="%e7%ad%9b%e6%b3%95"><![CDATA[筛法]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[20]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>
				蓝桥杯省赛-2016-C/C++-B-7		</title>
		<link>http://www.timecraft.cn/pages/181</link>
		<pubDate>Sun, 17 Mar 2019 04:31:16 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://www.timecraft.cn/?p=181</guid>
		<description></description>
		<content:encoded>
				<![CDATA[<!-- wp:heading -->
<h2>状态压缩枚举</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include&lt;bits/stdc++.h>
using namespace std;
#define LOCAL
#define ll long long int
#define inf 0x3f3f3f3f
#define mset(a,b) memset(a,b,sizeof(a))
const int maxn=1e5+5;
int a[12];
int g[3][4];
bool check(int x){
    int ans=0;
    while(x){
        ans+=x&1;
        x>>=1;
    }
    return ans==5;
}
void dfs(int i,int j){
    g[i][j]=0;
    if(i-1>=0&amp;&amp;g[i-1][j]) dfs(i-1,j);
    if(i+1&lt;3&amp;&amp;g[i+1][j]) dfs(i+1,j);
    if(j-1>=0&amp;&amp;g[i][j-1]) dfs(i,j-1);
    if(j+1&lt;4&amp;&amp;g[i][j+1]) dfs(i,j+1);
}
bool f(int z){
    for(int i=0;i&lt;3;i++){
        for(int j=0;j&lt;4;j++){
            g[i][j]=z&1;
            z>>=1;
        }
    }
    int cnt=0;
    for(int i=0;i&lt;3;i++){
        for(int j=0;j&lt;4;j++){
            if(g[i][j]){
                dfs(i,j);
                cnt++;
            }
        }
    }
    return cnt==1;
}
void solve(){
    int len=pow(2,12);
    int ans=0;
    for(int i=0;i&lt;len;i++){
        if(check(i)&amp;&amp;f(i)){
            ans++;
        }
    }
    printf("%d",ans);
}
int main(){
#ifdef LOCAL
    freopen("in.in","r",stdin);
#endif
    solve();
    return 0;
}</code></pre>
<!-- /wp:code -->]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>181</wp:post_id>
		<wp:post_date><![CDATA[2019-03-17 12:31:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-17 04:31:16]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[__trashed]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="lqb"><![CDATA[蓝桥杯省赛]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_desired_post_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[25]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>
				蓝桥杯省赛-2016-C/C++-B-9		</title>
		<link>http://www.timecraft.cn/pages/185</link>
		<pubDate>Sun, 17 Mar 2019 07:56:42 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://www.timecraft.cn/?p=185</guid>
		<description></description>
		<content:encoded>
				<![CDATA[<!-- wp:heading -->
<h2>hash 归位</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include&lt;bits/stdc++.h>
using namespace std;
#define LOCAL
#define ll long long int
#define inf 0x3f3f3f3f
#define mset(a,b) memset(a,b,sizeof(a))
const int maxn=1e4+5;
int a[maxn],b[maxn];
/*
    蓝桥杯省赛-2016-C/C++-B-9
*/
void Swap(int &amp;aa,int &amp;bb){
    int t=aa;
    aa=bb;
    bb=t;
}
void solve(){
    int n;
    int ans=0;
    scanf("%d",&amp;n);
    for(int i=1;i&lt;=n;i++) {
        scanf("%d",a+i);
        b[a[i]]=i;//使用b数组记录 a[i]应该出现在什么位置
    }
    for(int i=1;i&lt;=n;i++){
        if(a[i]!=i){
            int q=b[i],p=a[i];
            Swap(a[b[i]],a[i]);
            b[a[i]]=i;
            b[p]=q;
            ans++;
        }
    }
    printf("%d\n",ans);
}
int main(){
#ifdef LOCAL
    freopen("in.in","r",stdin);
#endif
    solve();
    return 0;
}</code></pre>
<!-- /wp:code -->]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>185</wp:post_id>
		<wp:post_date><![CDATA[2019-03-17 15:56:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-17 07:56:42]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e8%93%9d%e6%a1%a5%e6%9d%af%e7%9c%81%e8%b5%9b-2016-c-c-b-9]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="lqb"><![CDATA[蓝桥杯省赛]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[19]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>
				蓝桥杯省赛-2018-C/C++-B-9		</title>
		<link>http://www.timecraft.cn/pages/223</link>
		<pubDate>Mon, 18 Mar 2019 04:35:43 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://www.timecraft.cn/?p=223</guid>
		<description></description>
		<content:encoded>
				<![CDATA[<!-- wp:heading -->
<h2>two pointers</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include&lt;bits/stdc++.h>
using namespace std;
#define LOCAL
#define ll long long int
#define inf 0x3f3f3f3f
#define mset(a,b) memset(a,b,sizeof(a))
const int maxn=1e5+5;
set&lt;int> s;
vector&lt;int> ts[maxn];
int n,k,d;
bool twoPointers(int x){
    int s=0,t=0,sum=0;
    int n=ts[x].size();
    sort(ts[x].begin(),ts[x].end());
    for(;;){
        while(t&lt;n&amp;&amp;sum&lt;k){
            sum++;
            t++;
        }
        if(sum&lt;k) return false;
        if(ts[x][t-1]-ts[x][s]&lt;d) 
            return true;
        else {
            s++;
            sum--;
        }
    }
}
void solve(){
    cin>>n>>d>>k;
	for(int i=0;i&lt;n;i++)
	{
		int tt,id;
		cin>>tt>>id;
		ts[id].push_back(tt);
		s.insert(id);
	}
    int sz=s.size();
    for(int i=0;i&lt;sz;i++){
        set&lt;int>::iterator it=s.begin();
        int x=*it;
        if(twoPointers(x)){
            cout&lt;&lt;x&lt;&lt;"\n";
        }
        s.erase(it);
    }
}
int main(){
#ifdef LOCAL
    freopen("in.in","r",stdin);
#endif
    solve();
    return 0;
}</code></pre>
<!-- /wp:code -->]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>223</wp:post_id>
		<wp:post_date><![CDATA[2019-03-18 12:35:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-18 04:35:43]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e8%93%9d%e6%a1%a5%e6%9d%af%e7%9c%81%e8%b5%9b-2018-c-c-b-9]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="lqb"><![CDATA[蓝桥杯省赛]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[classic-editor-remember]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[18]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>
				无根树转有根树		</title>
		<link>http://www.timecraft.cn/pages/226</link>
		<pubDate>Tue, 19 Mar 2019 00:49:27 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://www.timecraft.cn/?p=226</guid>
		<description></description>
		<content:encoded>
				<![CDATA[<!-- wp:heading -->
<h2>在直接上代码</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include&lt;bits/stdc++.h>
using namespace std;
#define LOCAL
#define ll long long int
#define inf 0x3f3f3f3f
#define mset(a,b) memset(a,b,sizeof(a))
const int maxn=1e5+5;
vector&lt;int> g[maxn];
int n;
int p[maxn];
void dfs(int u,int fa){
    int d=g[u].size();
    for(int i=0;i&lt;d;i++){
        int v=g[u][i];
        if(v!=fa) 
            dfs(v,p[v]=u);
    }
}
void solve(){
    int u,v;
    scanf("%d",&amp;n);
    mset(p,-1);
    for(int i=0;i&lt;n;i++){
        scanf("%d%d",&amp;u,&amp;v);
        g[u].push_back(v);
        g[v].push_back(u);
    }
    int x;//指定root
    scanf("%d",&amp;x);
    dfs(x,-1);
}
int main(){
#ifdef LOCAL
    freopen("in.in","r",stdin);
#endif
    solve();
    return 0;
}</code></pre>
<!-- /wp:code -->]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>226</wp:post_id>
		<wp:post_date><![CDATA[2019-03-19 08:49:27]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-19 00:49:27]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e6%97%a0%e6%a0%b9%e6%a0%91%e8%bd%ac%e6%9c%89%e6%a0%b9%e6%a0%91]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="graph-algorithms"><![CDATA[Graph Algorithms]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[13]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>
				欧拉筛-模板		</title>
		<link>http://www.timecraft.cn/pages/228</link>
		<pubDate>Tue, 19 Mar 2019 12:44:06 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://www.timecraft.cn/?p=228</guid>
		<description></description>
		<content:encoded>
				<![CDATA[<!-- wp:heading -->
<h2>不解释模板，方便随时记忆</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code> const int maxn=100005;
int vis[maxn];
int prime[maxn],sz;
void eulor(){
    for(int i=2;i&lt;=maxn;i++){
        if(!vis[maxn]) prime[sz++]=i;
        for(int j=0;j&lt;sz&amp;&amp;i*prime[j]&lt;=maxn;j++){
            vis[i*prime[j]]=1;
            if(i%prime[j]==0) break;
        }
    }
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>228</wp:post_id>
		<wp:post_date><![CDATA[2019-03-19 20:44:06]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-19 12:44:06]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e6%ac%a7%e6%8b%89%e7%ad%9b-%e6%a8%a1%e6%9d%bf]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="acm"><![CDATA[ACM]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[13]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>
				codeforces-1132-B		</title>
		<link>http://www.timecraft.cn/pages/229</link>
		<pubDate>Wed, 20 Mar 2019 05:52:15 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://www.timecraft.cn/?p=229</guid>
		<description></description>
		<content:encoded>
				<![CDATA[<!-- wp:heading -->
<h2>前缀和+排序</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include&lt;bits/stdc++.h>
using namespace std;
#define LOCALa
#define ll long long int
#define inf 0x3f3f3f3f
#define mset(a,b) memset(a,b,sizeof(a))
const int maxn=3e5+5;
ll a[maxn];
ll sum[maxn];
int n,m,q;
void solve(){
    scanf("%d",&amp;n);
    for(int i=0;i&lt;n;i++)  scanf("%lld",a+i);
    sort(a,a+n);
    for(int i=1;i&lt;=n;i++){
        sum[i]=sum[i-1]+a[i-1];
    }
    scanf("%d",&amp;m);
    for(int i=0;i&lt;m;i++){
        scanf("%d",&amp;q);
        printf("%lld\n",sum[n]-sum[n-q+1]+sum[n-q]);
    }
}
int main(){
#ifdef LOCAL
    freopen("in.in","r",stdin);
#endif
    solve();
    return 0;
}</code></pre>
<!-- /wp:code -->]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>229</wp:post_id>
		<wp:post_date><![CDATA[2019-03-20 13:52:15]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-20 05:52:15]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[codeforces-1132-b]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="1132"><![CDATA[1132]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[13]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>
				codeforces-1132-A		</title>
		<link>http://www.timecraft.cn/pages/230</link>
		<pubDate>Wed, 20 Mar 2019 06:19:38 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://www.timecraft.cn/?p=230</guid>
		<description></description>
		<content:encoded>
				<![CDATA[<!-- wp:paragraph -->
<p>"()"不用考虑，因为放在哪里都可以，接下来要考虑的是")(",这种可以按照")()()()("方式排放，因此分别使用"(("和"))"放在")("两边就可以了，并且不用考虑")("的个数，然后cnt1-1和cnt2-1比较，如果相等则符合，反之不符合。</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include&lt;bits/stdc++.h>
using namespace std;
#define LOCALa
#define ll long long int
#define inf 0x3f3f3f3f
#define mset(a,b) memset(a,b,sizeof(a))
const int maxn=1e5+5;
int a,b,c,d;
void solve(){
    scanf("%d%d%d%d",&amp;a,&amp;b,&amp;c,&amp;d);
    if(c==0){
        if(a==d){
            printf("1\n");
            return;
        }
        else {
            printf("0\n");
            return;
        }
    }
    else {
        if(a&amp;&amp;d&amp;&amp;(a-1==d-1)){
            printf("1\n"); 
            return;
        }
        else {
            printf("0\n");
            return ; 
        }
    }
}
int main(){
#ifdef LOCAL
    freopen("in.in","r",stdin);
#endif
    solve();
    return 0;
}</code></pre>
<!-- /wp:code -->]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>230</wp:post_id>
		<wp:post_date><![CDATA[2019-03-20 14:19:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-20 06:19:38]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[codeforces-1132-a]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="1132"><![CDATA[1132]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[13]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>
				codeforces-1131-C		</title>
		<link>http://www.timecraft.cn/pages/231</link>
		<pubDate>Wed, 20 Mar 2019 06:49:43 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://www.timecraft.cn/?p=231</guid>
		<description></description>
		<content:encoded>
				<![CDATA[<!-- wp:heading -->
<h2>分析</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>为了保证差值最小，先选取最大的，然后在最大两侧先左后右依次按照降序放置即可。</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>/*
     @可省略ans数组，直接输出即可
*/
#include&lt;bits/stdc++.h>
using namespace std;
#define LOCALa
#define ll long long int
#define inf 0x3f3f3f3f
#define mset(a,b) memset(a,b,sizeof(a))
const int maxn=1e5+5;
int n;
int a[105];
int ans[105];
bool cmp(int &amp;a,int &amp;b)
{
    return a>b;
}
void solve(){
    scanf("%d",&amp;n);
    for(int i=0;i&lt;n;i++) scanf("%d",a+i);
    sort(a,a+n,cmp);
    int cur=0;
    ans[cur]=a[0];
    int pre=n-1,nxt=1;
    int cnt=1;
    while(cnt&lt;n){
        if(cnt&lt;n) {
            ans[pre]=a[cnt++];
            pre--;
        }
        if(cnt&lt;n) {
            ans[nxt]=a[cnt++];
            nxt++;
        }
    }
    for(int i=0;i&lt;n;i++){
        if(i) printf(" ");
        printf("%d",ans[i]);
    }
    printf("\n");
}
int main(){
#ifdef LOCAL
    freopen("in.in","r",stdin);
#endif
    solve();
    return 0;
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>231</wp:post_id>
		<wp:post_date><![CDATA[2019-03-20 14:49:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-20 06:49:43]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[codeforces-1131-c]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="1131"><![CDATA[1131]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[14]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>
				codeforces-1131-B		</title>
		<link>http://www.timecraft.cn/pages/232</link>
		<pubDate>Wed, 20 Mar 2019 13:13:44 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://www.timecraft.cn/?p=232</guid>
		<description></description>
		<content:encoded>
				<![CDATA[<!-- wp:heading -->
<h2> 分析</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p> 前一个回合的最大值(max)与当前回合的最小值(min)对比， 如果max>=min时，才可计数。然后迭代更新答案即可。注意：如果a==b时，要注意重复计算。</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include&lt;bits/stdc++.h>
using namespace std;
#define LOCALa
#define ll long long int
#define inf 0x3f3f3f3f
#define mset(a,b) memset(a,b,sizeof(a))
const int maxn=1e4+5;
int a[maxn],b[maxn];
void solve(){
    int n;
    scanf("%d",&amp;n);
    int x=0,y=0;
    int ans=1;
    map&lt;pair&lt;int,int>,int >mp;
    for(int i=0;i&lt;n;i++){
        scanf("%d %d",a+i,b+i);
        pair&lt;int,int> z(a[i],b[i]);
        if(mp[z]){
            continue;
        }
        mp[z]=1;
        if(x>=y){
            if(min(a[i],b[i])>=x){
                ans+=min(a[i],b[i])-x+1;
            }
            if(x==y){
                ans--;
            }
        }
        else {
            if(min(a[i],b[i])>=y){
                ans+=min(a[i],b[i])-y+1;
            }
        }
        x=a[i];
        y=b[i];
    }
    printf("%d\n",ans);
}
int main(){
#ifdef LOCAL
    freopen("in.in","r",stdin);
#endif
    solve();
    return 0;
}</code></pre>
<!-- /wp:code -->]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>232</wp:post_id>
		<wp:post_date><![CDATA[2019-03-20 21:13:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-20 13:13:44]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[codeforces-1131-b]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="1131"><![CDATA[1131]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[13]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>
				codeforces-1130-C		</title>
		<link>http://www.timecraft.cn/pages/233</link>
		<pubDate>Wed, 20 Mar 2019 15:21:41 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://www.timecraft.cn/?p=233</guid>
		<description></description>
		<content:encoded>
				<![CDATA[<!-- wp:paragraph -->
<p> 联通块+曼哈顿距离</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include&lt;bits/stdc++.h>
using namespace std;
#define LOCALa
#define ll long long int
#define inf 0x3f3f3f3f
#define mset(a,b) memset(a,b,sizeof(a))
const int maxn=1e5+5;
char g[55][55];
int n;
pair&lt;int,int> s,t;
int ans=inf;
int dx[]={-1,1,0,0};
int dy[]={0,0,-1,1};
int num[55][55];
int vis[55][55];
int Dis(int a,int b,int c,int d){
    return (a-c)*(a-c)+(b-d)*(b-d);
}
void find(int x,int y){
    for(int i=1;i&lt;=n;i++){
        for(int j=1;j&lt;=n;j++){
            if(num[i][j]==2){
                ans=min(ans,Dis(x,y,i,j));
            }
        }
    }
}
void mark(int x,int y,int val){
    vis[x][y]=1;
    num[x][y]=val;
    for(int i=0;i&lt;4;i++){
        int fx=x+dx[i];
        int fy=y+dy[i];
        if(fx>0&amp;&amp;fx&lt;=n&amp;&amp;fy>0&amp;&amp;fy&lt;=n&amp;&amp;g[fx][fy]=='0'&amp;&amp;!vis[fx][fy]){
            mark(fx,fy,val);
        }
    }
    // vis[x][y]=0;
}
void solve(){
    scanf("%d",&amp;n);
    scanf("%d %d",&amp;s.first,&amp;s.second);
    scanf("%d %d",&amp;t.first,&amp;t.second);
    for(int i=1;i&lt;=n;i++){
        getchar();
        for(int j=1;j&lt;=n;j++){
            scanf("%c",&amp;g[i][j]);
        }
    }
    mark(s.first,s.second,1);
    if(num[t.first][t.second]==1){
        printf("0\n");
        return ;
    }
    mset(vis,0);
    mark(t.first,t.second,2);
    for(int i=1;i&lt;=n;i++){
        for(int j=1;j&lt;=n;j++){
            if(g[i][j]=='0'&amp;&amp;num[i][j]==1){
                find(i,j);
            }
        }
    }
    if(ans==inf){
        printf("0\n");
    }
    else printf("%d\n",ans);
}
int main(){
#ifdef LOCAL
    freopen("in.in","r",stdin);
#endif
    solve();
    return 0;
}</code></pre>
<!-- /wp:code -->]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>233</wp:post_id>
		<wp:post_date><![CDATA[2019-03-20 23:21:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-20 15:21:41]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[codeforces-1130-c]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="1130"><![CDATA[1130]]></category>
		<category domain="post_tag" nicename="dfs"><![CDATA[dfs]]></category>
		<category domain="post_tag" nicename="%e8%bf%9e%e9%80%9a%e5%9d%97"><![CDATA[连通块]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[15]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[love]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>
				[WEEK_8] 题解 A,B		</title>
		<link>http://www.timecraft.cn/pages/237</link>
		<pubDate>Fri, 12 Apr 2019 13:00:32 +0000</pubDate>
		<dc:creator><![CDATA[chanhy]]></dc:creator>
		<guid isPermaLink="false">http://www.timecraft.cn/?p=237</guid>
		<description></description>
		<content:encoded>
				<![CDATA[<!-- wp:heading -->
<h2>A 题，快速幂+模拟</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>除法模拟本质是除数不停乘10再取模的过程，因此可以想到用快速幂求第x1，然后再模拟求x2-x1+1位即可</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>附上标程：</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><a href="https://ideone.com/fOexbR">https://ideone.com/fOexbR</a></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>B题，矩阵乘法+构造矩阵</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>此类问题使用构造矩阵，具体分析如下</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>[f(n - 1) ; f(n-2) ; n^2 ; n ; 1] * A = [f(n) ; f(n-1) ; (n + 1)^2 ; (n + 1) ; 1 ]&nbsp; 式子 1</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>由上式可构造出矩阵 A：</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":238,"align":"center"} -->
<div class="wp-block-image"><figure class="aligncenter"><img src="http://www.timecraft.cn/wp-content/uploads/2019/04/image.png" alt="" class="wp-image-238"/><figcaption>A 矩阵</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>因此求第n项只需求解A^(n-1)*B，那么B又是怎么的来的呢</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>B此时是触底情况，也就是说是n=2时的情况，因为 我们只需要求解 n >= 2时的情况，n=0| | n=1时的情况我们是已知的，根据式子1我们可以得出</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>[f(n - 2) ; f(n-3) ; (n-1)^2 ; n-1 ; 1] * A^2 = [f(n) ; f(n-1) ; (n + 1)^2 ; (n + 1) ; 1 ]&nbsp;</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>这列我们贴心的给出B</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":239,"align":"center"} -->
<div class="wp-block-image"><figure class="aligncenter"><img src="http://www.timecraft.cn/wp-content/uploads/2019/04/image-1.png" alt="" class="wp-image-239"/><figcaption>B 矩阵</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>到这里，我们解的答案就是求 A^(n-1) * B，然后取矩阵第一项即使答案</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>附上标程</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><a href="https://ideone.com/R9HFFZ">https://ideone.com/R9HFFZ</a></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>C 无题解 只有标程</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><a href="https://ideone.com/RM8yBs">https://ideone.com/RM8yBs</a></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>D 无题解 只有标程</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><a href="https://ideone.com/7vN0vZ">https://ideone.com/7vN0vZ</a></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>E 无题解 只有标程</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><a href="https://ideone.com/ZTBd9Q">https://ideone.com/ZTBd9Q</a></p>
<!-- /wp:paragraph -->]]>		</content:encoded>
		<excerpt:encoded>
				<![CDATA[]]>		</excerpt:encoded>
		<wp:post_id>237</wp:post_id>
		<wp:post_date><![CDATA[2019-04-12 21:00:32]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-04-12 13:00:32]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[week_8-%e9%a2%98%e8%a7%a3-ab]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="%e5%91%a8%e8%b5%9b%e9%a2%98%e8%a7%a3"><![CDATA[周赛题解]]></category>
		<category domain="category" nicename="solutions"><![CDATA[题解]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_2f87dca97a0d1545157ff2cb90313da3]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[49]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[love]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
				</channel>
</rss>
	